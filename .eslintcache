[{"E:\\Dev Work\\HorseV2\\alexapp\\src\\Helpers\\HelperFunc.tsx":"1","E:\\Dev Work\\HorseV2\\alexapp\\src\\queries\\myQueries.tsx":"2","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\RaceTabs\\RaceTabs.tsx":"3","E:\\Dev Work\\HorseV2\\alexapp\\src\\App.tsx":"4","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\RaceTime\\RaceTime.tsx":"5","E:\\Dev Work\\HorseV2\\alexapp\\src\\index.tsx":"6","E:\\Dev Work\\HorseV2\\alexapp\\src\\assets\\styling\\mainTheme.tsx":"7","E:\\Dev Work\\HorseV2\\alexapp\\src\\pages\\Results\\Results.tsx":"8","E:\\Dev Work\\HorseV2\\alexapp\\src\\routes\\Routes\\Routes.tsx":"9","E:\\Dev Work\\HorseV2\\alexapp\\src\\pages\\WeightsTables\\WeightsTables.tsx":"10","E:\\Dev Work\\HorseV2\\alexapp\\src\\pages\\Today\\Today.tsx":"11","E:\\Dev Work\\HorseV2\\alexapp\\src\\pages\\Home\\Home.tsx":"12","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\ResultsUpdater\\index.ts":"13","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\RaceDetails\\index.ts":"14","E:\\Dev Work\\HorseV2\\alexapp\\src\\pages\\Tomorrow\\Tomorrow.tsx":"15","E:\\Dev Work\\HorseV2\\alexapp\\src\\pages\\Results\\index.ts":"16","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Day\\index.ts":"17","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\UpdatersContainer\\index.ts":"18","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\UpdatersContainer\\UpdatersContainer.tsx":"19","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\EyecatchersUpdater\\EyecatchersUpdater.tsx":"20","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\RaceDetails\\RaceDetails.tsx":"21","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\ResultsUpdater\\ResultsUpdater.tsx":"22","E:\\Dev Work\\HorseV2\\alexapp\\src\\pages\\Today\\index.ts":"23","E:\\Dev Work\\HorseV2\\alexapp\\src\\provider.tsx":"24","E:\\Dev Work\\HorseV2\\alexapp\\src\\pages\\Tomorrow\\index.ts":"25","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\UpdateTablePanel\\UpdateTablePanel.tsx":"26","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Day\\Day.tsx":"27","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\MeetingAccordion\\MeetingAccordion.tsx":"28","E:\\Dev Work\\HorseV2\\alexapp\\src\\pages\\UpdateTables\\UpdateTables.tsx":"29","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\TomorrowUpdater\\index.ts":"30","E:\\Dev Work\\HorseV2\\alexapp\\src\\pages\\UpdateTables\\index.ts":"31","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\TodayUpdater\\TodayUpdater.tsx":"32","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\DateUpdater\\DateUpdater.tsx":"33","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\MeetingAccordion\\index.ts":"34","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\RaceDetails\\HorsesInfoSection\\HorsesInfoSection.tsx":"35","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\RaceDetails\\RaceInfoSection\\RaceInfoSection.tsx":"36","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\UpdateTablePanel\\index.ts":"37","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\TodayUpdater\\index.ts":"38","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\EyecatchersUpdater\\index.ts":"39","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\RaceTable\\RaceTable.tsx":"40"},{"size":7880,"mtime":1612463380653,"results":"41","hashOfConfig":"42"},{"size":7418,"mtime":1612714471158,"results":"43","hashOfConfig":"42"},{"size":2632,"mtime":1612638708983,"results":"44","hashOfConfig":"42"},{"size":5607,"mtime":1612614275290,"results":"45","hashOfConfig":"42"},{"size":464,"mtime":1612549552157,"results":"46","hashOfConfig":"42"},{"size":795,"mtime":1612559415867,"results":"47","hashOfConfig":"42"},{"size":351,"mtime":1612027016724,"results":"48","hashOfConfig":"42"},{"size":515,"mtime":1612637852412,"results":"49","hashOfConfig":"42"},{"size":1152,"mtime":1612617794466,"results":"50","hashOfConfig":"42"},{"size":177,"mtime":1612559235379,"results":"51","hashOfConfig":"42"},{"size":296,"mtime":1612559977405,"results":"52","hashOfConfig":"42"},{"size":5866,"mtime":1612611931946,"results":"53","hashOfConfig":"42"},{"size":49,"mtime":1612458832214,"results":"54","hashOfConfig":"42"},{"size":43,"mtime":1612466663473,"results":"55","hashOfConfig":"42"},{"size":307,"mtime":1612560002685,"results":"56","hashOfConfig":"42"},{"size":35,"mtime":1612551061908,"results":"57","hashOfConfig":"42"},{"size":27,"mtime":1612469058789,"results":"58","hashOfConfig":"42"},{"size":55,"mtime":1612459476672,"results":"59","hashOfConfig":"42"},{"size":1801,"mtime":1612617508475,"results":"60","hashOfConfig":"42"},{"size":3422,"mtime":1612710408488,"results":"61","hashOfConfig":"42"},{"size":1864,"mtime":1612990761026,"results":"62","hashOfConfig":"42"},{"size":7008,"mtime":1612458828496,"results":"63","hashOfConfig":"42"},{"size":31,"mtime":1612559283060,"results":"64","hashOfConfig":"42"},{"size":269,"mtime":1612611972336,"results":"65","hashOfConfig":"42"},{"size":37,"mtime":1612559290337,"results":"66","hashOfConfig":"42"},{"size":2637,"mtime":1612770678495,"results":"67","hashOfConfig":"42"},{"size":1119,"mtime":1612617691537,"results":"68","hashOfConfig":"42"},{"size":2076,"mtime":1612714816179,"results":"69","hashOfConfig":"42"},{"size":276,"mtime":1612559881173,"results":"70","hashOfConfig":"42"},{"size":51,"mtime":1612458768026,"results":"71","hashOfConfig":"42"},{"size":45,"mtime":1612551053693,"results":"72","hashOfConfig":"42"},{"size":690,"mtime":1612459507925,"results":"73","hashOfConfig":"42"},{"size":39625,"mtime":1612723535711,"results":"74","hashOfConfig":"42"},{"size":53,"mtime":1612471980694,"results":"75","hashOfConfig":"42"},{"size":6737,"mtime":1612992618232,"results":"76","hashOfConfig":"42"},{"size":354,"mtime":1612715312997,"results":"77","hashOfConfig":"42"},{"size":53,"mtime":1612383293609,"results":"78","hashOfConfig":"42"},{"size":45,"mtime":1612458781091,"results":"79","hashOfConfig":"42"},{"size":57,"mtime":1612459469105,"results":"80","hashOfConfig":"42"},{"size":7397,"mtime":1612991756545,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"34jcos",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"97"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"110"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Dev Work\\HorseV2\\alexapp\\src\\Helpers\\HelperFunc.tsx",["180","181","182","183","184","185","186","187","188","189","190","191"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\queries\\myQueries.tsx",[],["192","193"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\RaceTabs\\RaceTabs.tsx",["194"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\App.tsx",["195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211"],"import React, { createRef, SetStateAction, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Provider from './provider';\n\nimport {Box, Flex, Text} from \"rebass\";\nimport { UpdatersContainer } from './components/Updaters/UpdatersContainer';\nimport { DaysContainer } from './components/DaysContainer';\nimport { Container, ListItem, ListItemText } from '@material-ui/core';\nimport { Route, Switch } from \"react-router-dom\";\nimport { routes } from './routes/Routes/Routes';\nimport { NavLink } from \"react-router-dom\";\nimport { GET_CURRENT_DATE, GET_TOMORROW_DATE } from './Helpers/HelperFunc';\nimport { Sidebar } from './components/Sidebar';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nlet activeRoute = (routeName: string) => {\n    return window.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n}\n\n\nconst changeName = (name:string, currentDate:string, tomorrow:string) => {\n    let changed = name;\n    switch(name){\n        case \"Today\":\n            changed = currentDate;\n            break;\n        case \"Tomorrow\":\n            changed = tomorrow;\n            break;\n    }\n    return changed;\n};\n\n\nconst drawerWidth = 120;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    drawer: {\n      [theme.breakpoints.up('sm')]: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n    },\n    appBar: {\n      [theme.breakpoints.up('sm')]: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n      },\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n        display: 'none',\n      },\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  }));\n\n\nconst App: React.FC = () => {\n    const currentDate = GET_CURRENT_DATE();\n    const tomorrow = GET_TOMORROW_DATE();\n\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [mobileOpen, setMobileOpen] = useState(false);\n    const [tabname, setTabname] = useState(\"\");\n  \n    const handleDrawerToggle = () => {\n      setMobileOpen(!mobileOpen);\n    };\n\n    const drawer = (\n        <div>\n          <div className={classes.toolbar} />\n            <Divider />\n            <List>\n            {routes.map((prop, key) => (\n                <NavLink to={prop.layout + prop.path} className={activeRoute(prop.path)} activeClassName=\"active\" key={key}>\n                    <ListItem button>\n                        <ListItemText primary={changeName(prop.name, currentDate, tomorrow)} />\n                    </ListItem>\n                </NavLink>\n            ))}\n            </List>\n        </div>\n\n      );\n\n    const container = undefined; //window !== undefined ? () => window().document.body : undefined;\n\n    return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Racing App 2.0\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n            <Switch>\n                {routes.map((prop, key) => {\n                    return (\n                        <Route\n                            path={prop.layout + prop.path}\n                            component={prop.component}\n                            key={key}\n                        />\n                    );\n                })}\n            </Switch>\n      </main>\n    </div>\n)};\n\nexport default App;\n",["212","213"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\RaceTime\\RaceTime.tsx",["214","215","216","217"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\index.tsx",[],["218","219"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\assets\\styling\\mainTheme.tsx",[],"E:\\Dev Work\\HorseV2\\alexapp\\src\\pages\\Results\\Results.tsx",["220","221","222","223","224"],"import React, { useEffect, useMemo, useState } from \"react\";\r\nimport usePromise from \"react-promise\";\r\n\r\nexport interface ResultsProps {}\r\n\r\ninterface ResultsInfo_insert_input {\r\n  h_id: String;\r\n  h_link: String;\r\n  h_lostdist: any;\r\n  h_name: String;\r\n  h_or: any;\r\n  h_pos: String;\r\n  r_code: String;\r\n  r_date: String;\r\n  r_distancef: any;\r\n  r_id: String;\r\n  r_place: String;\r\n  r_requirements: String;\r\n}\r\n\r\nexport const Results: React.FC<ResultsProps> = (props) => {\r\n  return <div>Results table</div>;\r\n};\r\n","E:\\Dev Work\\HorseV2\\alexapp\\src\\routes\\Routes\\Routes.tsx",["225","226"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\pages\\WeightsTables\\WeightsTables.tsx",[],["227","228"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\pages\\Today\\Today.tsx",[],["229","230"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\pages\\Home\\Home.tsx",[],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\ResultsUpdater\\index.ts",[],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\RaceDetails\\index.ts",[],"E:\\Dev Work\\HorseV2\\alexapp\\src\\pages\\Tomorrow\\Tomorrow.tsx",[],["231","232"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\pages\\Results\\index.ts",[],["233","234"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Day\\index.ts",[],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\UpdatersContainer\\index.ts",[],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\UpdatersContainer\\UpdatersContainer.tsx",["235","236"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\EyecatchersUpdater\\EyecatchersUpdater.tsx",["237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\RaceDetails\\RaceDetails.tsx",["261","262","263","264","265"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\ResultsUpdater\\ResultsUpdater.tsx",["266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283"],"import { useMutation, useQuery } from \"@apollo/client\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { Flag } from \"@material-ui/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { Box, Button, Flex, Heading, Text } from \"rebass\";\r\nimport { distanceToWinnerStrToFloat, getAllRaces, GET_DAYS_BETWEEN_INC, GET_DIFF_DAYS_STRS, GET_YESTERDAY_DATE, p_I, queryNode, queryNodeAll, queryNodeAttr, queryNodeHref, queryNodeText, queryNodeTextNoEdits, textToFurlong, trackOkay } from \"../../../Helpers/HelperFunc\";\r\nimport { M_Q } from \"../../../queries/myQueries\";\r\nimport { Loading } from \"../../Loading\";\r\nimport { Table } from \"../../Table\";\r\nimport { UpdateTablePanel } from \"../../UpdateTablePanel\";\r\n\r\nexport interface ResultsUpdaterProps {\r\n  globalDisabledButton: boolean;\r\n  setGlobalDisabledButton: (update: boolean | ((prevState: boolean) => boolean)) => void;\r\n}\r\n\r\n\r\ninterface ResultsInfo_insert_input {\r\n  h_id: String;\r\n  h_link: String;\r\n  h_lostdist: any;\r\n  h_name: String;\r\n  h_or: any;\r\n  h_pos: String;\r\n  r_code: String;\r\n  r_date: String;\r\n  r_distancef: any;\r\n  r_id: String;\r\n  r_place: String;\r\n  r_requirements: String;\r\n}\r\n\r\nexport const ResultsUpdater: React.FC<ResultsUpdaterProps> = (props) => {\r\n  const res1 = useQuery(M_Q.GET_ALL_RESULTS, {});\r\n  const res2 = useQuery(M_Q.GET_ALL_TRACKS_INFO, {});\r\n\r\n  const [\r\n    { loading: results_loading, data: results_data, error: results_error},\r\n    { loading: tracks_loading, data: tracks_data, error: tracks_error }\r\n] = [res1, res2];\r\n\r\n  const [insertResult] = useMutation(M_Q.INSERT_RESULT); \r\n\r\n  const results = results_data?.ResultsInfo;\r\n  const tracks_info = tracks_data?.TrackInformation;\r\n  const lastUpdate = results_data?.ResultsInfo_aggregate?.aggregate?.max?.r_date;\r\n  const yesterday = GET_YESTERDAY_DATE();\r\n  const listOfDates =  GET_DAYS_BETWEEN_INC(yesterday, lastUpdate);\r\n\r\n  const [showClick, setShowClick] = useState(true);\r\n  \r\n  const updateClick = async () => {\r\n    try {\r\n\r\n      props.setGlobalDisabledButton(false);\r\n\r\n      let objects:ResultsInfo_insert_input[] = [];\r\n\r\n      let listOfResultsUrls = listOfDates.map(x => `https://www.racingpost.com/results/${x}`);\r\n          \r\n      let allDaysResults = await getAllRaces(listOfResultsUrls);\r\n      \r\n      for (let daysResultsIndex in allDaysResults.results){\r\n  \r\n        let daysResults  = allDaysResults.results[daysResultsIndex];\r\n        let daysResults_div = daysResults;\r\n        \r\n        let fullResults = queryNodeAll(daysResults_div, '[data-test-selector=\"button-fullResult\"]').map(x => \"https://www.racingpost.com\" + queryNodeHref(x));\r\n        \r\n        fullResults = fullResults.filter(x => {\r\n            let okay = false;\r\n            let urlSplit = x?.split(\"/\") || [];\r\n            if(urlSplit.length > 5){\r\n                okay = trackOkay(urlSplit[5], tracks_info);\r\n            }\r\n            return okay;\r\n        });\r\n      \r\n        let getAllRaces1 = await getAllRaces(fullResults);\r\n        for (let race_index in getAllRaces1.results){\r\n            let result_race  = getAllRaces1.results[race_index];\r\n            let result_race_div = result_race;\r\n            \r\n            let r_id = queryNodeAttr(queryNode(result_race_div, '.rp-resultsWrapper__content'), \"data-analytics-race-id\") || \"-\";\r\n            let r_date = (queryNodeAttr(queryNode(result_race_div, '.rp-resultsWrapper__content'), \"data-analytics-race-date\") || \"-\").replaceAll(\" \", \"-\");\r\n            let r_place = queryNodeTextNoEdits(queryNode(result_race_div, '.rp-raceTimeCourseName__name'))  || \"-\";\r\n            let r_requirements = queryNodeTextNoEdits(queryNode(result_race_div, '.rp-raceTimeCourseName_ratingBandAndAgesAllowed'))  || \"-\";\r\n            \r\n            \r\n            let raceDistance = (queryNodeTextNoEdits(queryNode(result_race_div, '.rp-raceTimeCourseName_distance'))  || \"-\").replace(/\\s/g, '');\r\n            let r_distancef = textToFurlong(raceDistance);\r\n            \r\n            let raceTitle = queryNodeTextNoEdits(queryNode(result_race_div, '.rp-raceTimeCourseName__title'))  || \"-\";\r\n            let raceTitleLower = raceTitle.toLowerCase();\r\n            let isHurdle = raceTitleLower.includes(\"hurdle\");\r\n            let isChase = raceTitleLower.includes(\"chase\");\r\n            let isAW = r_place.toLowerCase().includes(\"(aw)\");\r\n            \r\n            let r_code = \"F\";\r\n            if(isHurdle){\r\n                r_code = \"H\";\r\n            }\r\n            if(isChase){\r\n                r_code = \"C\";\r\n            }\r\n            if(isAW){\r\n                r_code = \"X\";\r\n            }\r\n            \r\n            let runners = queryNodeAll(result_race_div, \".rp-horseTable__mainRow\");\r\n            let runner_arr = [];\r\n            \r\n            runners.forEach(async h => {\r\n                let h_pos = queryNodeText(queryNode(h, '[data-test-selector=\"text-horsePosition\"]'))  || \"-\";\r\n                let h_link = queryNodeHref(queryNode(h, '[data-test-selector=\"link-horseName\"]'))  || \"-\";\r\n                let h_name = queryNodeText(queryNode(h, '[data-test-selector=\"link-horseName\"]'))  || \"-\";\r\n                let h_or = p_I(queryNodeText(queryNode(h, '[data-ending=\"OR\"]'))) || 0; \r\n                let h_link_split = h_link ? h_link.split(\"/\") : [];\r\n                let h_id = \"-\";\r\n                if(h_link_split.length > 3){\r\n                    h_id = h_link_split[3]\r\n                }\r\n                \r\n                let lostdist_node = queryNode(h, '.rp-horseTable__pos__length');\r\n  \r\n                let lostdist = \"\";\r\n                switch(lostdist_node.children.length){\r\n                  case 1: \r\n                    lostdist = lostdist_node.children[0].innerText; \r\n                    break;\r\n                  case 2: \r\n                    lostdist = lostdist_node.children[1].innerText.replaceAll(\"[\",\"\").replaceAll(\"]\",\"\"); \r\n                    break;\r\n                }\r\n                let h_lostdist = distanceToWinnerStrToFloat(lostdist);\r\n                \r\n                let alreadyIn = results.filter((x: { h_id: string; r_id: string; }) => x.h_id == h_id && x.r_id == r_id).length;\r\n                if(!alreadyIn){\r\n                  let requestObj:ResultsInfo_insert_input = {h_pos, h_link, h_name, h_id, h_or, r_id, r_requirements, r_date, r_code, r_place, r_distancef, h_lostdist};\r\n                    //console.log(\"inserting\", requestObj);\r\n                  objects.push(requestObj);\r\n                }\r\n            });\r\n  \r\n        }\r\n      }\r\n      console.log(objects);\r\n      await insertResult({\r\n        variables: {objects: objects},\r\n        refetchQueries: [{query: M_Q.GET_ALL_RESULTS}],\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      props.setGlobalDisabledButton(true);\r\n    }\r\n  }\r\n  \r\n  return <>\r\n    \r\n    <UpdateTablePanel loading={results_loading} title={\"Results\"} lastUpdate={lastUpdate} yesterday={yesterday} onClick={updateClick} globalDisabledButton={props.globalDisabledButton}/>\r\n  </>\r\n  \r\n};",["284","285"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\pages\\Today\\index.ts",[],["286","287"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\provider.tsx",[],"E:\\Dev Work\\HorseV2\\alexapp\\src\\pages\\Tomorrow\\index.ts",[],["288","289"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\UpdateTablePanel\\UpdateTablePanel.tsx",["290","291","292","293","294","295","296"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Day\\Day.tsx",["297","298"],"import { useQuery } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { Box, Flex, Text } from \"rebass\";\r\nimport { GET_CURRENT_DATE } from \"../../Helpers/HelperFunc\";\r\nimport { M_Q } from \"../../queries/myQueries\";\r\nimport { Loading } from \"../Loading\";\r\nimport { Meeting } from \"../Meeting\";\r\nimport { MeetingAccordion } from \"../MeetingAccordion\";\r\nexport interface DayProps {\r\n  date?: string;\r\n}\r\n\r\nexport const Day: React.FC<DayProps> = (props) => {\r\n\r\n  const currentDate = props.date || GET_CURRENT_DATE();\r\n  const res1 = useQuery(M_Q.GET_MEETINGS_FOR_DATE, {variables: { date: currentDate }})\r\n  const [\r\n    { loading: meeting_loading, data: meeting_data, error: meeting_error}\r\n] = [res1];\r\n\r\n  let length = meeting_data?.dayplaces ? meeting_data?.dayplaces.length : 0;\r\n\r\n  return <Flex width=\"100%\">\r\n  {meeting_loading ? \r\n    <Loading/> : (\r\n    <Flex width=\"100%\">\r\n      <Box width=\"100%\">\r\n          {length ? \r\n            <MeetingAccordion data={meeting_data?.dayplaces}/>\r\n          : \r\n            <Text>Day not made.</Text>\r\n          }\r\n      </Box> \r\n    </Flex>\r\n    )}\r\n</Flex>\r\n};\r\n","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\MeetingAccordion\\MeetingAccordion.tsx",[],"E:\\Dev Work\\HorseV2\\alexapp\\src\\pages\\UpdateTables\\UpdateTables.tsx",[],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\TomorrowUpdater\\index.ts",[],"E:\\Dev Work\\HorseV2\\alexapp\\src\\pages\\UpdateTables\\index.ts",[],["299","300"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\TodayUpdater\\TodayUpdater.tsx",["301","302"],"import { useQuery } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { GET_CURRENT_DATE } from \"../../../Helpers/HelperFunc\";\r\nimport { M_Q } from \"../../../queries/myQueries\";\r\nimport { DateUpdater } from \"../DateUpdater\";\r\n\r\nexport interface TodayUpdaterProps {\r\n  globalDisabledButton: boolean;\r\n  setGlobalDisabledButton: (update: boolean | ((prevState: boolean) => boolean)) => void;\r\n}\r\n\r\nexport const TodayUpdater: React.FC<TodayUpdaterProps> = (props) => {\r\n\r\n  const currentDate = GET_CURRENT_DATE();\r\n  \r\n  return <DateUpdater \r\n  globalDisabledButton={props.globalDisabledButton}\r\n  setGlobalDisabledButton={props.setGlobalDisabledButton}\r\n  date={currentDate}/>;\r\n};\r\n","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\DateUpdater\\DateUpdater.tsx",["303","304","305","306","307","308","309","310","311","312"],"import { useMutation, useQuery } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { arrayToSet, distanceToWinnerStrToFloat, GET_CURRENT_DATE, GET_PAGE_DIV, placeToPlaceKey, p_I, queryNode, queryNodeAll, queryNodeAttr, queryNodeHref, queryNodeText, textToFurlong, trackOkay, queryNodeTextAll, GET_P_URL, getJSONFromPHP, realDateToRpHisDate, distanceTodistanceFloat, dateGood, getPreloadedState, isGoodPosFunc, p_F } from \"../../../Helpers/HelperFunc\";\r\nimport { M_Q } from \"../../../queries/myQueries\";\r\nimport { UpdateTablePanel } from \"../../UpdateTablePanel\";\r\n\r\nexport interface DateUpdaterProps {\r\n  globalDisabledButton: boolean;\r\n  setGlobalDisabledButton: (update: boolean | ((prevState: boolean) => boolean)) => void;\r\n  date: string;\r\n}\r\n\r\ninterface jockeyLast14Days{\r\n  runs:any;\r\n  wins:any;\r\n  percent: any;\r\n}\r\n\r\ninterface dayplaces_insert_input{\r\n  date: string\r\n  id: string\r\n  place: string\r\n  races: string\r\n}\r\ninterface dayraces_insert_input{\r\n  date: string\r\n  class: number\r\n  description: string\r\n  distance: string\r\n  distancef: number\r\n  going: string\r\n  id: string\r\n  link: string\r\n  rating: string\r\n  time: string\r\n  title: string\r\n  winnings: number,\r\n  horseIds: string\r\n}\r\n\r\ninterface dayhorses_insert_input{\r\n  age: number\r\n  breeder: string\r\n  claim: number\r\n  colour_code: string\r\n  comment: string\r\n  dam: string\r\n  dam_sire_avg_flat_win_dist: number \r\n  dam_sire_avg_win_dist: number \r\n  dob: string\r\n  draw: number\r\n  form: string\r\n  gelded: string\r\n  h_ltrecords_aw_or: number\r\n  h_ltrecords_c_or: number\r\n  h_ltrecords_f_or: number\r\n  h_ltrecords_h_or: number\r\n  h_ltrecords_nhf_or: number\r\n  h_ltrecords_rs_or: number\r\n  h_rider_blind_stake: number\r\n  h_rider_good_runs: number\r\n  h_rider_good_runs_top_track: string\r\n  h_rider_good_runs_top_trainer: string\r\n  h_rider_link: string\r\n  h_rider_total_prize_money: number\r\n  h_trainer_blind_stake: number\r\n  h_trainer_good_runs: number\r\n  h_trainer_good_runs_top_rider: string\r\n  h_trainer_good_runs_top_track: string\r\n  h_trainer_link: string\r\n  h_trainer_running_to_form: number \r\n  h_trainer_total_prize_money: number\r\n  headgear: string\r\n  id: string\r\n  jockey_recent_perc: number \r\n  jockey_recent_runs: number\r\n  jockey_recent_wins: number\r\n  lastrun: number\r\n  name: string\r\n  number: number\r\n  or: number\r\n  owner: string\r\n  previous_owners_amount: number\r\n  previous_owners_info: string\r\n  previous_trainers_amount: number\r\n  previous_trainers_info: string\r\n  profilelink: string\r\n  raceid: string\r\n  rider: string\r\n  riderallowance: number\r\n  rpr: number\r\n  sex_code: string\r\n  silks: string\r\n  sire: string\r\n  sire_avg_flat_win_dist: number \r\n  sire_avg_win_dist: number \r\n  stable_tour_quotes: string\r\n  tips: number\r\n  trainer: string\r\n  trainer_recent_perc: number \r\n  trainer_recent_runs: number\r\n  trainer_recent_wins: number\r\n  trainerrtf: number\r\n  ts: number\r\n  weight: number\r\n}\r\ninterface dayhorseshistory_insert_input{\r\n  claim: number\r\n  class: number\r\n  comment: string\r\n  course: string\r\n  date: string\r\n  direction: string\r\n  draw: number\r\n  furlongs: number \r\n  going: string\r\n  headgear: string\r\n  hisraceid: string\r\n  horseid: string\r\n  lostdist: number \r\n  or: number\r\n  outof: number\r\n  place: string\r\n  position: string\r\n  prize: number\r\n  racetype: string\r\n  rider: string\r\n  rpr: number\r\n  tatics: string\r\n  ts: number\r\n}\r\n\r\ninterface trainer_collection {\r\n  [key: string]: string | undefined\r\n}\r\ninterface rider_collection {\r\n  [key: string]: string | undefined\r\n}\r\n\r\nexport const DateUpdater: React.FC<DateUpdaterProps> = (props) => {\r\n  const currentDate = props.date || GET_CURRENT_DATE();\r\n  const res1 = useQuery(M_Q.GET_MEETINGS_FOR_DATE, {variables: { date: currentDate }})\r\n  const res2 = useQuery(M_Q.GET_ALL_TRACKS_INFO, {});\r\n  const res3 = useQuery(M_Q.GET_HORSE_HISTORY_DATA_CHECK, {});\r\n  const [\r\n    { loading: meeting_loading, data: meeting_data, error: meeting_error},\r\n    { loading: tracks_loading, data: tracks_data, error: tracks_error },\r\n    { loading: h_history_loading, data: h_history_data, error: h_history_error }\r\n] = [res1, res2, res3];\r\n\r\n  const [insertMeeting] = useMutation(M_Q.INSERT_MEETING); \r\n  const [insertRace] = useMutation(M_Q.INSERT_RACE); \r\n  const [insertHorse] = useMutation(M_Q.INSERT_HORSE); \r\n  const [insertHorseHistory] = useMutation(M_Q.INSERT_HORSE_HISTORY); \r\n\r\n  const amount = meeting_data?.dayplaces_aggregate?.aggregate?.count;\r\n  const tracks_info = tracks_data?.TrackInformation;\r\n  const currentHorsesHistoryInfo = h_history_data?.dayhorseshistory;\r\n\r\n  \r\n\r\n  const updateClick = async () => {\r\n    try{\r\n      \r\n      props.setGlobalDisabledButton(false);\r\n\r\n      console.log(\"updater\" + currentDate);\r\n      let rp_picks_url = \"https://www.racingpost.com/racecards/\" + currentDate;\r\n\r\n      let meeting_objects:dayplaces_insert_input[] = [];\r\n      let race_objects:dayraces_insert_input[] = [];\r\n      let horse_objects:dayhorses_insert_input[] = [];\r\n      let horse_history_objects:dayhorseshistory_insert_input[] = [];\r\n\r\n      let trainer_divs_collection:trainer_collection = {};\r\n      let rider_divs_collection:rider_collection = {};\r\n      \r\n      \r\n\r\n      const rp_day_obj = await GET_PAGE_DIV(rp_picks_url);\r\n      let rp_day_node = rp_day_obj.page_div;\r\n\r\n      let day_races_nodes = queryNodeAll(rp_day_node, '[data-test-selector=\"RC-courseCards__raceRow\"] a');\r\n        \r\n      let day_races = day_races_nodes.map((race_node: HTMLDivElement) => {\r\n          let raceId = queryNodeAttr(race_node, \"data-race-id\");\r\n          let place = queryNodeAttr(race_node, \"data-racecourse\");\r\n          let raceTime = queryNodeAttr(race_node, \"data-race-time\").split(\" \").join(\":\");\r\n          let raceTitle = queryNodeText(queryNode(race_node, '[data-test-selector=\"RC-courseCards__info\"]'));\r\n          let raceDesc = queryNodeText(queryNode(race_node, '[data-test-selector=\"RC-courseCards__going\"]')).replace(/\\s\\s+/g, ' ');\r\n          let raceLink = queryNodeHref(race_node);\r\n          return {place,raceId,raceTime,raceTitle,raceDesc,raceLink}\r\n      });\r\n      let places = arrayToSet(day_races, \"place\", \"races\");\r\n      let dayPlacesArr: any[] = [];\r\n      places.forEach((place : any) => {\r\n          dayPlacesArr.push({\r\n              \"id\": placeToPlaceKey(place.place),\r\n              \"place\": place.place,\r\n              \"races\": place.races\r\n          });\r\n      });\r\n      \r\n      dayPlacesArr = dayPlacesArr.filter((x) => {\r\n          return x.id && trackOkay(x.id, tracks_info);\r\n      });\r\n      \r\n      for (const place of dayPlacesArr) {\r\n        let placeID = place.id;\r\n        let placeName = place.place;\r\n        let placeRaces = place.races.map((x:any) => x.raceId).join(\",\");\r\n\r\n        meeting_objects.push( { id: placeID, place: placeName, date: currentDate, races: placeRaces });\r\n\r\n        for await (const race of place.races) {\r\n                \r\n          let raceUrl = \"https://www.racingpost.com\" + race.raceLink;\r\n          let raceId = race.raceId;\r\n\r\n          let race_obj = await GET_PAGE_DIV(raceUrl);\r\n          let race_node = race_obj.page_div;\r\n          \r\n          let r_prize = queryNodeText(queryNode(race_node, '[data-test-selector=\"RC-headerBox__winner\"] .RC-headerBox__infoRow__content'));\r\n          let distance = queryNodeText(queryNode(race_node, '[data-test-selector=\"RC-header__raceDistanceRound\"]')).replace(/\\s/g, '');\r\n          let distancef = textToFurlong(distance);\r\n          let rclass = p_I(queryNodeText(queryNode(race_node, '[data-test-selector=\"RC-header__raceClass\"]')).match(/\\d+/g));;\r\n          let winnings = r_prize ? p_I(r_prize.match(/\\d+,*\\d*/g).join(\"\").replace(\",\",\"\")) : 0;\r\n          let going = queryNodeText(queryNode(race_node, '[data-test-selector=\"RC-headerBox__going\"] .RC-headerBox__infoRow__content'));\r\n          let rating = queryNodeText(queryNode(race_node, '[data-test-selector=\"RC-header__rpAges\"]'));\r\n          \r\n\r\n          let horseIds: any = [];\r\n                \r\n          \r\n          let r_runners_sel =  queryNodeAll(race_node, '.RC-runnerRow.js-RC-runnerRow.js-PC-runnerRow:not(.RC-runnerRow_disabled)');\r\n          let r_runners = [];\r\n          \r\n          for (let h of r_runners_sel) {\r\n              \r\n              let id =   queryNodeAttr(h, \"data-ugc-runnerid\");\r\n              horseIds.push(id);\r\n              \r\n              let h_name =   queryNodeText( queryNode(h, '[data-test-selector=\"RC-cardPage-runnerName\"]'));\r\n              \r\n              let h_lastRun_str =    queryNodeText( queryNode(h, '[data-test-selector=\"RC-cardPage-runnerStats-lastRun\"]'));\r\n              let h_sire =   queryNodeText( queryNode(h, '[data-test-selector=\"RC-pedigree__sire\"]'));\r\n              let h_dam =   queryNodeText( queryNode(h, '[data-test-selector=\"RC-pedigree__dam\"]'));\r\n              let h_tips_str =   queryNodeTextAll( queryNode(h, '[data-test-selector=\"RC-cardPage-runnerStats-tips\"]'));\r\n              let h_comment =   queryNodeText( queryNode(h, '[data-test-selector=\"RC-comments__content\"]'));\r\n              let h_trainerRtf_str =   queryNodeText( queryNode(h, '[data-test-selector=\"RC-cardPage-runnerTrainer-rtf\"]'));\r\n              let h_riderAllowance_str =   queryNodeText( queryNode(h, '[data-test-selector=\"RC-cardPage-runnerJockey-allowance\"]'));\r\n              let h_form =   queryNodeTextAll( queryNode(h, '[data-test-selector=\"RC-cardPage-runnerForm\"]')); \r\n              let h_or_str =   queryNodeAttr(  queryNode(h, '[data-test-selector=\"RC-cardPage-runnerOr\"]') , 'data-order-or');\r\n              let h_ts_str =   queryNodeAttr(  queryNode(h, '[data-test-selector=\"RC-cardPage-runnerTs\"]') , 'data-order-ts');\r\n              let h_rpr_str =   queryNodeAttr(  queryNode(h, '[data-test-selector=\"RC-cardPage-runnerRpr\"]') , 'data-order-rpr');\r\n              let h_draw_str =   queryNodeAttr(  queryNode(h, '[data-test-selector=\"RC-cardPage-runnerNumber-draw\"]') , 'data-order-draw');\r\n              let h_number_str =   queryNodeAttr(  queryNode(h, '[data-test-selector=\"RC-cardPage-runnerNumber-no\"]') , 'data-order-no');\r\n              let h_age_str =   queryNodeAttr(  queryNode(h, '[data-test-selector=\"RC-cardPage-runnerAge\"]') , 'data-order-age');\r\n              let h_weight_lbs_str =   queryNodeAttr(  queryNode(h, '[data-test-selector=\"RC-cardPage-runnerWgt-carried\"]') , 'data-order-wgt');\r\n              \r\n              let h_rider =   queryNodeAttr(  queryNode(h, '[data-test-selector=\"RC-cardPage-runnerJockey-name\"]') , 'data-order-jockey');\r\n              \r\n              let h_rider_link = \"https://www.racingpost.com\"+  queryNodeHref( queryNode(h, '[data-test-selector=\"RC-cardPage-runnerJockey-name\"]'));\r\n              \r\n              let h_trainer =   queryNodeAttr(  queryNode(h, '[data-test-selector=\"RC-cardPage-runnerTrainer-name\"]') , 'data-order-trainer');\r\n              \r\n              let h_trainer_link = \"https://www.racingpost.com\"+  queryNodeHref( queryNode(h, '[data-test-selector=\"RC-cardPage-runnerTrainer-name\"]'));\r\n              \r\n              let h_profileLink = \"https://www.racingpost.com\"+   queryNodeHref( queryNode(h, '[data-test-selector=\"RC-cardPage-runnerName\"]'));\r\n                                  \r\n              \r\n              let h_headgear =   queryNodeTextAll( queryNode(h, '[data-test-selector=\"RC-cardPage-runnerHeadGear\"]')); \r\n              \r\n              let h_or = p_I(h_or_str.match(/\\d+/g));\r\n              let h_ts = p_I(h_ts_str.match(/\\d+/g));\r\n              let h_rpr = p_I(h_rpr_str.match(/\\d+/g));\r\n              let h_draw = p_I(h_draw_str.match(/\\d+/g));\r\n              let h_number = p_I(h_number_str.match(/\\d+/g));\r\n              let h_lastRun = p_I(h_lastRun_str.match(/\\d+/g));\r\n              let h_age = p_I(h_age_str.match(/\\d+/g));\r\n              let h_weight_lbs = p_I(h_weight_lbs_str.match(/\\d+/g));\r\n              let h_tips = p_I(h_tips_str.match(/\\d+/g));\r\n              let h_trainerRtf = p_I(h_trainerRtf_str.match(/\\d+/g));\r\n              let h_riderAllowance = p_I(h_riderAllowance_str.match(/\\d+/g));\r\n              \r\n              let h_claim =   queryNodeText(  queryNode(h, '[data-test-selector=\"RC-cardPage-runnerJockey-allowance\"]') );\r\n              \r\n              h_claim  = p_I(h_claim.match(/\\d+/g));\r\n              if(h_claim){\r\n                    h_or = h_or - h_claim;\r\n              }\r\n              \r\n              \r\n              let h_rider_link_obj_stored = rider_divs_collection[h_rider_link];\r\n\r\n              let h_rider_link_obj = {page_div_str: \"\"};\r\n              let h_rider_link_obj_str = \"\";\r\n              if(h_rider_link_obj_stored){\r\n                h_rider_link_obj_str = h_rider_link_obj_stored;\r\n              }else{\r\n                h_rider_link_obj = await GET_PAGE_DIV(h_rider_link);\r\n                h_rider_link_obj_str = h_rider_link_obj.page_div_str;\r\n                rider_divs_collection[h_rider_link] = h_rider_link_obj_str;\r\n              }\r\n\r\n              let h_rider_link_obj_str_preloaded =  getPreloadedState(h_rider_link_obj_str);\r\n              \r\n              let h_rider_good_runs = 0;\r\n              let h_rider_good_runs_top_trainer_arr:any[] = [];\r\n              let h_rider_good_runs_top_track_arr:any[] = [];\r\n              let h_rider_total_prize_money = 0;\r\n              let h_rider_blind_stake = 0;\r\n              \r\n              if(h_rider_link_obj_str_preloaded){\r\n                  let h_rider_obj_last14Days = h_rider_link_obj_str_preloaded.last14Days || [];\r\n                  \r\n                  h_rider_obj_last14Days.forEach((x:any) => {\r\n                      \r\n                      let lostdist =  distanceToWinnerStrToFloat(x.winningDistance ? x.winningDistance : x.distanceToWinner);     \r\n                      let isGoodPos = false;    \r\n                      isGoodPos =  isGoodPosFunc(x.raceOutcomeCode, x.noOfRunners, lostdist, x.distanceFurlong);\r\n                      x[\"isGoodPos\"] = isGoodPos;       \r\n                      \r\n                      h_rider_good_runs_top_trainer_arr.push(x.trainerStyleName);\r\n                      h_rider_good_runs_top_track_arr.push(x.courseStyleName);\r\n                  });\r\n                  \r\n                  h_rider_good_runs = h_rider_obj_last14Days.filter((x:any) => x.isGoodPos).length;\r\n                  \r\n                  h_rider_good_runs_top_trainer_arr = Array.from(new Set(h_rider_good_runs_top_trainer_arr.filter((x:any) => x)));\r\n                  h_rider_good_runs_top_track_arr = Array.from(new Set(h_rider_good_runs_top_track_arr.filter((x:any) => x)));\r\n                  \r\n                  \r\n                  let h_rider_obj_statisticalSummary = h_rider_link_obj_str_preloaded.statisticalSummary || [];\r\n                  \r\n                  \r\n                  let h_rider_obj_latest_year_stats = h_rider_obj_statisticalSummary.length ? h_rider_obj_statisticalSummary.sort((a:any,b:any) => new Date(b.seasonEndDate).getTime()  - new Date(a.seasonEndDate).getTime() )[0] : {};\r\n                  \r\n                  h_rider_total_prize_money = p_I(h_rider_obj_latest_year_stats.netTotalPrizeMoney);\r\n                  h_rider_blind_stake = p_I(h_rider_obj_latest_year_stats.stake);\r\n                  \r\n                  \r\n              }\r\n              let h_rider_good_runs_top_trainer = h_rider_good_runs_top_trainer_arr.join(\",\");\r\n              let h_rider_good_runs_top_track = h_rider_good_runs_top_track_arr.join(\",\");\r\n              \r\n\r\n              let h_trainer_link_obj_stored = trainer_divs_collection[h_trainer_link];\r\n\r\n              let h_trainer_link_obj = {page_div_str: \"\"};\r\n              let h_trainer_link_obj_str = \"\";\r\n              if(h_trainer_link_obj_stored){\r\n                h_trainer_link_obj_str = h_trainer_link_obj_stored;\r\n              }else{\r\n                h_trainer_link_obj = await GET_PAGE_DIV(h_trainer_link);\r\n                h_trainer_link_obj_str = h_trainer_link_obj.page_div_str;\r\n                trainer_divs_collection[h_trainer_link] = h_trainer_link_obj_str;\r\n              }\r\n              \r\n              let h_trainer_link_obj_str_preloaded =  getPreloadedState(h_trainer_link_obj_str);\r\n              \r\n              let h_trainer_running_to_form = null;\r\n              let h_trainer_good_runs = 0;\r\n              let h_trainer_total_prize_money = 0;\r\n              let h_trainer_blind_stake = 0;\r\n              let h_trainer_good_runs_top_rider_arr:any[] = [];\r\n              let h_trainer_good_runs_top_track_arr:any[] = [];\r\n              \r\n              if(h_trainer_link_obj_str_preloaded){\r\n                  let h_trainer_obj_profile = h_trainer_link_obj_str_preloaded.profile;\r\n                  \r\n                  h_trainer_running_to_form = p_F(h_trainer_obj_profile.runningToForm);\r\n                  \r\n                  let h_trainer_obj_last14Days = h_trainer_link_obj_str_preloaded.last14Days  || [];\r\n                  \r\n                  h_trainer_obj_last14Days.forEach((x:any) => {\r\n                      \r\n                      let lostdist =  distanceToWinnerStrToFloat(x.winningDistance ? x.winningDistance : x.distanceToWinner);     \r\n                      let isGoodPos = false;    \r\n                      isGoodPos =  isGoodPosFunc(x.raceOutcomeCode, x.noOfRunners, lostdist, x.distanceFurlong);\r\n                      x[\"isGoodPos\"] = isGoodPos;       \r\n                      \r\n                      \r\n                      h_trainer_good_runs_top_rider_arr.push(x.jockeyStyleName);\r\n                      h_trainer_good_runs_top_track_arr.push(x.courseStyleName);\r\n                  });\r\n                  \r\n                  h_trainer_good_runs =  h_trainer_obj_last14Days.filter((x:any) => x.isGoodPos).length;\r\n                  \r\n                  h_trainer_good_runs_top_rider_arr = Array.from(new Set(h_trainer_good_runs_top_rider_arr.filter((x:any) => x)));\r\n                  h_trainer_good_runs_top_track_arr = Array.from(new Set(h_trainer_good_runs_top_track_arr.filter((x:any) => x)));\r\n                  \r\n                  \r\n                  let h_trainer_obj_statisticalSummary = h_trainer_link_obj_str_preloaded.statisticalSummary  || [];\r\n                  \r\n                  let h_trainer_obj_latest_year_stats = h_trainer_obj_statisticalSummary.length ? h_trainer_obj_statisticalSummary.sort((a: any,b:any) => new Date(b.seasonEndDate).getTime()  - new Date(a.seasonEndDate).getTime() )[0] : {};\r\n                  \r\n                  h_trainer_total_prize_money = p_I(h_trainer_obj_latest_year_stats.netTotalPrizeMoney);\r\n                  h_trainer_blind_stake = p_I(h_trainer_obj_latest_year_stats.stake);\r\n                                            \r\n              }\r\n              \r\n              let h_trainer_good_runs_top_rider = h_trainer_good_runs_top_rider_arr.join(\",\");\r\n              let h_trainer_good_runs_top_track = h_trainer_good_runs_top_track_arr.join(\",\");\r\n              \r\n              let h_form_default_link = h_profileLink.split(\"#\")[0] + \"/form\";\r\n              let h_form_default_obj = await  GET_PAGE_DIV(h_form_default_link);\r\n              let h_form_default_obj_str = h_form_default_obj.page_div_str;\r\n              \r\n              let h_form_default_obj_str_preloaded =  getPreloadedState(h_form_default_obj_str);\r\n              \r\n              //horses profile info\r\n              \r\n              \r\n              \r\n              let dob = \"\";\r\n              let silks = \"\";\r\n              let gelded = \"\";\r\n              let colour_code = \"\";\r\n              let sex_code = \"\";\r\n              \r\n              let owner = \"\";\r\n              let breeder = \"\";\r\n              \r\n              \r\n              let trainer_recent_runs = 0;\r\n              let trainer_recent_wins = 0;\r\n              let trainer_recent_perc = 0;\r\n              \r\n              \r\n              let jockey_recent_runs = 0;\r\n              let jockey_recent_wins = 0;\r\n              let jockey_recent_perc = 0;\r\n              \r\n              let previous_trainers_amount = null;\r\n              let previous_trainers_info = \"\";\r\n              \r\n              let previous_owners_amount = null;\r\n              let previous_owners_info = \"\";\r\n              \r\n              let sire_avg_flat_win_dist = 0;\r\n              let dam_sire_avg_flat_win_dist = 0;\r\n              let sire_avg_win_dist = 0;\r\n              let dam_sire_avg_win_dist = 0;\r\n              \r\n              let stable_tour_quotes = \"\";\r\n              let quotes = \"\";\r\n          \r\n              \r\n              if(h_form_default_obj_str_preloaded){\r\n                  let h_obj_profile = h_form_default_obj_str_preloaded.profile;\r\n                  \r\n                  dob = h_obj_profile.horseDateOfBirth ? h_obj_profile.horseDateOfBirth.split(\"T\")[0] : \"\";\r\n                  silks = h_obj_profile.silkImagePath ? \"https://www.rp-assets.com/png_silks/\" + h_obj_profile.silkImagePath + \".png\" : \"\";\r\n                  gelded =  h_obj_profile.dateGelded ? h_obj_profile.dateGelded.split(\"T\")[0] : \"\";\r\n                  \r\n                  colour_code =  h_obj_profile.horseColourCode ? h_obj_profile.horseColourCode : \"\";\r\n                  sex_code = h_obj_profile.horseSexCode ? h_obj_profile.horseSexCode : \"\";\r\n                  \r\n                  owner =  h_obj_profile.ownerName ? h_obj_profile.ownerName : \"\";\r\n                  breeder = h_obj_profile.breederName ? h_obj_profile.breederName : \"\";\r\n                  \r\n                  trainer_recent_runs = h_obj_profile.trainerLast14Days.runs ? p_I(h_obj_profile.trainerLast14Days.runs) : 0;\r\n                  trainer_recent_wins = h_obj_profile.trainerLast14Days.wins ? p_I(h_obj_profile.trainerLast14Days.wins) : 0;\r\n                  trainer_recent_perc = h_obj_profile.trainerLast14Days.percent ? p_F(p_F(h_obj_profile.trainerLast14Days.percent).toFixed(2)) : 0;\r\n                  \r\n                  previous_trainers_amount = h_obj_profile.previousTrainers ? h_obj_profile.previousTrainers.length : null;\r\n                  if(previous_trainers_amount){\r\n                      previous_trainers_info = h_obj_profile.previousTrainers.map((x:any) => x.trainerChangeDate.split(\"T\")[0]+\":\"+x.trainerStyleName).join(\",\");\r\n                  }\r\n                      \r\n                  previous_owners_amount = h_obj_profile.previousOwners ? h_obj_profile.previousOwners.length : null;\r\n                  if(previous_owners_amount){\r\n                      previous_owners_info = h_obj_profile.previousOwners.map((x:any) => x.ownerChangeDate.split(\"T\")[0]+\":\"+x.ownerStyleName).join(\",\");\r\n                  }\r\n                  \r\n                  sire_avg_flat_win_dist = h_obj_profile.sireAvgFlatWinDist ? p_F(p_F(h_obj_profile.sireAvgFlatWinDist).toFixed(2)) : 0;\r\n                  dam_sire_avg_flat_win_dist = h_obj_profile.damSireAvgFlatWinDist ? p_F(p_F(h_obj_profile.damSireAvgFlatWinDist).toFixed(2)) : 0;\r\n                  \r\n                  sire_avg_win_dist = h_obj_profile.sireAvgWinDistance ? p_F(p_F(h_obj_profile.sireAvgWinDistance).toFixed(2)) : 0;\r\n                  dam_sire_avg_win_dist = h_obj_profile.damSireAvgWinDistance ? p_F(p_F(h_obj_profile.damSireAvgWinDistance).toFixed(2)) : 0;\r\n                  \r\n                  \r\n                  stable_tour_quotes = h_form_default_obj_str_preloaded.stableTourQuotes ? h_form_default_obj_str_preloaded.stableTourQuotes.map((x:any)=> \"ST: \" + x.notes).join(\" | \") : \"\";\r\n                  \r\n                  quotes = h_form_default_obj_str_preloaded.quotes ? h_form_default_obj_str_preloaded.quotes.map((x:any)=> \"Q: \" + x.notes + \"-\" +  realDateToRpHisDate(x.raceDate)).join(\" | \") : \"\";\r\n                  \r\n                  stable_tour_quotes = [stable_tour_quotes, quotes].join(\" | \");\r\n                  \r\n                  let entries = h_form_default_obj_str_preloaded.entries ? h_form_default_obj_str_preloaded.entries : [];\r\n                  \r\n                  let jockeyLast14Days:jockeyLast14Days = {runs:null,wins:null,percent:null};\r\n                  entries.forEach((x:any) => {\r\n                      if(x.jockeyStyleName && (x.jockeyStyleName.toLowerCase().replace(/[\\W_]+/g,\" \").replace(/'/g, \"\").trim() == h_rider.toLowerCase().replace(/[\\W_]+/g,\" \").replace(/'/g, \"\").trim())){\r\n                          jockeyLast14Days = x.jockeyLast14Days;\r\n                      }\r\n                  });                        \r\n                  jockey_recent_runs = jockeyLast14Days.runs ? p_I(jockeyLast14Days.runs) : 0;\r\n                  jockey_recent_wins = jockeyLast14Days.wins ? p_I(jockeyLast14Days.wins) : 0;\r\n                  jockey_recent_perc = jockeyLast14Days.percent ? p_F(p_F(jockeyLast14Days.percent).toFixed(2)) : 0;\r\n                  \r\n              }\r\n              \r\n              \r\n              \r\n              \r\n              \r\n              \r\n              \r\n              \r\n              \r\n              let h_form_link = h_profileLink.split(\"#\")[0].replace(\"profile\",\"profile/tab\") + \"/form\";\r\n              let h_form_obj = await  getJSONFromPHP( GET_P_URL(h_form_link));\r\n              let h_form_json_res = h_form_obj.json_res  || {};\r\n              let h_form_arr = h_form_json_res.form || [];\r\n              \r\n              Object.keys(h_form_arr).forEach(key => {\r\n                  \r\n                  let hist_obj = h_form_arr[key];\r\n                  let hdate =  realDateToRpHisDate(hist_obj.raceDatetime);\r\n                  let horseid = id;\r\n\r\n                  let alreadyInTableCheck = (currentHorsesHistoryInfo != undefined) ? currentHorsesHistoryInfo.filter((x:any) => x.horseid == horseid && x.date == hdate) : [];\r\n                  let dateOkayCheck =  dateGood(hdate, currentDate);\r\n                  \r\n                  if(alreadyInTableCheck.length || !dateOkayCheck){\r\n                      //already in table\r\n                  }else{;\r\n                      \r\n                      let row_pos = hist_obj.raceOutcomeCode;\r\n                        \r\n                      if(!p_I(hist_obj.raceOutcomeCode)){\r\n                        //console.log(hist_obj.raceOutcomeCode);\r\n                      }\r\n                      //if(row_pos){\r\n                          \r\n                          let row_pos_outOf = p_I(hist_obj.noOfRunners);\r\n                          let lostdist =  distanceToWinnerStrToFloat(hist_obj.winningDistance ? hist_obj.winningDistance : hist_obj.distanceToWinner);\r\n\r\n                          let his_rider = hist_obj.jockeyStyleName;\r\n\r\n                          let his_racetype = (hist_obj.raceTypeCode);\r\n                          let his_place = (hist_obj.courseRpAbbrev3).toLowerCase();\r\n                          let his_prize = p_I(hist_obj.prizeSterling);\r\n                          let his_distance =  distanceTodistanceFloat(hist_obj.distanceFurlong);\r\n                          let his_going = hist_obj.goingTypeServicesDesc;\r\n                          let his_class = p_I(hist_obj.raceClass);\r\n\r\n                          let his_draw = p_I(hist_obj.draw);\r\n\r\n                          let his_rpr = p_I(hist_obj.rpPostmark);\r\n                          let his_or = p_I(hist_obj.officialRatingRanOff);\r\n                          \r\n                          let his_claim = p_I(hist_obj.weightAllowanceLbs);\r\n                          \r\n                          if(his_claim){\r\n                                his_or = his_or - his_claim;\r\n                          }\r\n                              \r\n                          let his_ts = p_I(hist_obj.rpTopspeed);\r\n\r\n                          let his_race_info_comment =  hist_obj.courseComments  || \"-\";\r\n                          let his_direction = \"-\";\r\n                          if ( [\"left\", \"lh\"].some((x:any) => his_race_info_comment.toLowerCase().includes(x)) ) {\r\n                              his_direction = \"LH\";\r\n                          }\r\n                          if ( [\"right\", \"rh\"].some((x:any) => his_race_info_comment.toLowerCase().includes(x)) ) {\r\n                              his_direction = \"RH\";\r\n                          }\r\n                          \r\n                          \r\n\r\n                          let htatics = hist_obj.raceTactics.actual.runnerAttribDescription;\r\n                          \r\n                          let hComment = hist_obj.rpCloseUpComment;\r\n                          let hCourse = hist_obj.courseStyleName;\r\n                          let hHeadGear = hist_obj.horseHeadGear;\r\n                          \r\n                      \r\n                          let hracetype = his_racetype;\r\n                          let hplace = his_place;\r\n                          let hprize = his_prize;\r\n                          let hfurlongs = his_distance;\r\n                          let hgoing = his_going;\r\n                          let hrclass = his_class;\r\n                          let hdraw = his_draw;\r\n                          let hor = his_or;\r\n                          let hclaim = his_claim;\r\n                          let hts = his_ts;\r\n                          let hrpr = his_rpr;\r\n                          let hrider = his_rider;\r\n                          let hposition = row_pos;\r\n                          let hlostdist = lostdist;\r\n                          let houtof = row_pos_outOf;\r\n                          let hdirection = his_direction;\r\n\r\n\r\n\r\n                            let tableHistoryRow: dayhorseshistory_insert_input = {\r\n                                horseid: (horseid ? horseid : \"-\").replace(/[\\W_]+/g,\" \").replace(/'/g, \"\"), \r\n                                hisraceid: (key ? key : \"-\").replace(/[\\W_]+/g,\" \").replace(/'/g, \"\"), \r\n                                date: (hdate ? hdate : \"-\").replace(/[\\W_]+/g,\" \").replace(/'/g, \"\"),\r\n                                place: (hplace ? hplace : \"-\").replace(/[\\W_]+/g,\" \").replace(/'/g, \"\"),\r\n                                furlongs: hfurlongs ? hfurlongs : 0,\r\n                                going: (hgoing ? hgoing : \"-\").replace(/[\\W_]+/g,\" \").replace(/'/g, \"\"),\r\n                                class: hrclass ? hrclass : 0,\r\n                                or: hor ? hor : 0,\r\n                                claim: hclaim ? hclaim : 0,\r\n                                ts: hts ? hts : 0,\r\n                                rpr: hrpr ? hrpr : 0,\r\n                                rider: (hrider ? hrider : \"-\").replace(/[\\W_]+/g,\" \").replace(/'/g, \"\"),\r\n                                position: hposition ? hposition : \"-\",\r\n                                lostdist: hlostdist ? hlostdist : 0,\r\n                                outof: houtof ? houtof : 0,\r\n                                direction: (hdirection  ? hdirection : \"-\").replace(/[\\W_]+/g,\" \").replace(/'/g, \"\"),\r\n                                \r\n                                prize: hprize ? hprize : 0,\r\n                                racetype: (hracetype ? hracetype : \"-\").replace(/[\\W_]+/g,\" \").replace(/'/g, \"\"),\r\n                                draw: hdraw  ? hdraw : 0,\r\n                                tatics: (htatics ? htatics : \"-\").replace(/[\\W_]+/g,\" \").replace(/'/g, \"\"),\r\n                                \r\n                                comment: (hComment ? hComment : \"-\").replace(/[\\W_]+/g,\" \").replace(/'/g, \"\"),\r\n                                course: (hCourse ? hCourse : \"-\").replace(/[\\W_]+/g,\" \").replace(/'/g, \"\"),\r\n                                headgear: (hHeadGear ? hHeadGear : \"-\").replace(/[\\W_]+/g,\" \").replace(/'/g, \"\")\r\n                                \r\n                          };      \r\n                          \r\n                          horse_history_objects.push(tableHistoryRow);\r\n                          \r\n                      //}\r\n                      \r\n                  }\r\n                  \r\n              });\r\n              \r\n              \r\n              let h_records_obj = h_form_json_res.raceRecords || {};\r\n              let h_ltRecords_obj = h_records_obj.lifetimeRecords || {};\r\n              \r\n              let h_ltRecords_AW_or = p_I((h_ltRecords_obj[\"All-weather\"] || {})[\"or+\"]);\r\n              let h_ltRecords_F_or = p_I((h_ltRecords_obj[\"Flat Turf\"] || {})[\"or+\"]);\r\n              let h_ltRecords_NHF_or = p_I((h_ltRecords_obj[\"NHF\"] || {})[\"or+\"]);\r\n              let h_ltRecords_H_or = p_I((h_ltRecords_obj[\"Hurdle\"] || {})[\"or+\"]);\r\n              let h_ltRecords_C_or = p_I((h_ltRecords_obj[\"Chase\"] || {})[\"or+\"]);\r\n              let h_ltRecords_RS_or = p_I((h_ltRecords_obj[\"Rules Races\"] || {})[\"or+\"]);\r\n              \r\n\r\n              \r\n              let tableHorseRow: dayhorses_insert_input = { \r\n                    id: id, \r\n                    name: h_name,\r\n                    raceid: raceId,\r\n                    lastrun: h_lastRun ? h_lastRun : 0,\r\n                    sire: h_sire,\r\n                    dam: h_dam,\r\n                    tips: h_tips ? h_tips : 0,\r\n                    comment: h_comment,\r\n                    trainerrtf: h_trainerRtf ? h_trainerRtf : 0,\r\n                    riderallowance: h_riderAllowance ? h_riderAllowance : 0,\r\n                    form: h_form,\r\n                    or: h_or ? h_or : 0,\r\n                    claim: h_claim ? h_claim : 0,\r\n                    ts: h_ts ? h_ts : 0,\r\n                    rpr: h_rpr ? h_rpr : 0,\r\n                    draw: h_draw ? h_draw : 0,\r\n                    number: h_number ? h_number : 0,\r\n                    age: h_age ? h_age : 0,\r\n                    weight: h_weight_lbs ? h_weight_lbs : 0,\r\n                    rider: h_rider,\r\n                    trainer: h_trainer,\r\n                    profilelink: h_profileLink,\r\n                    headgear: h_headgear,\r\n                    dob: dob,\r\n                    silks:silks,\r\n                    gelded:gelded,\r\n                    colour_code:colour_code,\r\n                    sex_code:sex_code,\r\n\r\n                    owner:owner.replace(/'/g, \"\"),\r\n                    breeder:breeder.replace(/'/g, \"\"),\r\n\r\n                    trainer_recent_runs:trainer_recent_runs ? trainer_recent_runs : 0,\r\n                    trainer_recent_wins:trainer_recent_wins ? trainer_recent_wins : 0,\r\n                    trainer_recent_perc:trainer_recent_perc ? trainer_recent_perc : 0,\r\n\r\n                    previous_trainers_amount:previous_trainers_amount ? previous_trainers_amount : 0,\r\n                    previous_trainers_info:previous_trainers_info.replace(/'/g, \"\"),\r\n\r\n                    previous_owners_amount:previous_owners_amount ? previous_owners_amount : 0,\r\n                    previous_owners_info:previous_owners_info.replace(/'/g, \"\"),\r\n\r\n                    sire_avg_flat_win_dist:sire_avg_flat_win_dist  ? sire_avg_flat_win_dist : 0,\r\n                    dam_sire_avg_flat_win_dist:dam_sire_avg_flat_win_dist  ? dam_sire_avg_flat_win_dist : 0,\r\n                    sire_avg_win_dist:sire_avg_win_dist ? sire_avg_win_dist : 0,\r\n                    dam_sire_avg_win_dist:dam_sire_avg_win_dist ? dam_sire_avg_win_dist : 0,\r\n\r\n                    stable_tour_quotes:stable_tour_quotes.replace(/'/g, \"\"),\r\n                    \r\n                    \r\n                    jockey_recent_runs:jockey_recent_runs ? jockey_recent_runs : 0,\r\n                    jockey_recent_wins:jockey_recent_wins ? jockey_recent_wins : 0,\r\n                    jockey_recent_perc:jockey_recent_perc ? jockey_recent_perc : 0,\r\n                    \r\n                    \r\n                    \r\n                    h_rider_good_runs:h_rider_good_runs ? h_rider_good_runs : 0,\r\n                    h_rider_good_runs_top_trainer:h_rider_good_runs_top_trainer ? h_rider_good_runs_top_trainer.replace(/'/g, \"\") : \"\",  \r\n                    h_rider_good_runs_top_track:h_rider_good_runs_top_track ? h_rider_good_runs_top_track.replace(/'/g, \"\") : \"\",      \r\n                    \r\n                    h_trainer_good_runs_top_rider:h_trainer_good_runs_top_rider ? h_trainer_good_runs_top_rider.replace(/'/g, \"\") : \"\",      \r\n                    h_trainer_good_runs_top_track:h_trainer_good_runs_top_track ? h_trainer_good_runs_top_track.replace(/'/g, \"\") : \"\",      \r\n                    \r\n                    h_rider_total_prize_money:h_rider_total_prize_money ? h_rider_total_prize_money : 0,\r\n                    h_rider_blind_stake:h_rider_blind_stake ? h_rider_blind_stake : 0,\r\n\r\n                    h_trainer_running_to_form:h_trainer_running_to_form ? h_trainer_running_to_form : 0,\r\n                    h_trainer_good_runs:h_trainer_good_runs ? h_trainer_good_runs : 0,\r\n                    h_trainer_total_prize_money:h_trainer_total_prize_money ? h_trainer_total_prize_money : 0,      \r\n                    h_trainer_blind_stake:h_trainer_blind_stake ? h_trainer_blind_stake : 0,   \r\n                    \r\n                    h_rider_link: h_rider_link,\r\n                    h_trainer_link: h_trainer_link,\r\n                    \r\n                    \r\n                    h_ltrecords_aw_or: h_ltRecords_AW_or ? h_ltRecords_AW_or : 0,\r\n                    h_ltrecords_f_or: h_ltRecords_F_or ? h_ltRecords_F_or : 0,\r\n                    h_ltrecords_nhf_or: h_ltRecords_NHF_or ? h_ltRecords_NHF_or : 0,\r\n                    h_ltrecords_h_or: h_ltRecords_H_or ? h_ltRecords_H_or : 0,\r\n                    h_ltrecords_c_or: h_ltRecords_C_or ? h_ltRecords_C_or : 0,\r\n                    h_ltrecords_rs_or: h_ltRecords_RS_or ? h_ltRecords_RS_or : 0\r\n              };\r\n\r\n              horse_objects.push(tableHorseRow);\r\n          }\r\n\r\n                \r\n          horseIds = horseIds.join(\",\");\r\n          race_objects.push({ \r\n            id: raceId, \r\n            time: race.raceTime, \r\n            title: race.raceTitle,\r\n            description: race.raceDesc,\r\n            link: raceUrl,\r\n            distance: distance,\r\n            distancef: distancef ? distancef : 0,\r\n            class: rclass ? rclass : 0,\r\n            winnings: winnings  ? winnings : 0,\r\n            going: going,\r\n            rating: rating,\r\n            date: currentDate,\r\n            horseIds: horseIds\r\n          });\r\n        }\r\n\r\n      }\r\n      let size = 200;\r\n      while (race_objects.length > 0){\r\n        await insertRace({\r\n          variables: {objects: race_objects.splice(0, size)},\r\n          refetchQueries: [{\r\n            query: M_Q.GET_MEETINGS_FOR_DATE,\r\n            variables: { date: currentDate }\r\n          }]\r\n        });\r\n      }\r\n      while (meeting_objects.length > 0){\r\n        await insertMeeting({\r\n          variables: {objects: meeting_objects.splice(0, size)},\r\n          refetchQueries: [{\r\n            query: M_Q.GET_MEETINGS_FOR_DATE,\r\n            variables: { date: currentDate }\r\n          }]\r\n        });\r\n      }\r\n      while (horse_objects.length > 0){\r\n        await insertHorse({\r\n          variables: {objects: horse_objects.splice(0, size)},\r\n          refetchQueries: [{\r\n            query: M_Q.GET_MEETINGS_FOR_DATE,\r\n            variables: { date: currentDate }\r\n          }]\r\n        });\r\n      }\r\n      while (horse_history_objects.length > 0){\r\n        await insertHorseHistory({\r\n          variables: {objects: horse_history_objects.splice(0, size)},\r\n          refetchQueries: [{\r\n            query: M_Q.GET_MEETINGS_FOR_DATE,\r\n            variables: { date: currentDate }\r\n          }]\r\n        });\r\n      }\r\n      \r\n      console.log(trainer_divs_collection);\r\n      console.log(rider_divs_collection);\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      props.setGlobalDisabledButton(true);\r\n      \r\n    }\r\n  };\r\n  \r\n  return <>\r\n        <UpdateTablePanel loading={meeting_loading} title={currentDate} count={amount} onClick={updateClick} globalDisabledButton={props.globalDisabledButton}/>\r\n      </>;\r\n};\r\n","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\MeetingAccordion\\index.ts",[],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\RaceDetails\\HorsesInfoSection\\HorsesInfoSection.tsx",["313","314"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\RaceDetails\\RaceInfoSection\\RaceInfoSection.tsx",[],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\UpdateTablePanel\\index.ts",[],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\TodayUpdater\\index.ts",[],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\EyecatchersUpdater\\index.ts",[],["315","316"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\RaceTable\\RaceTable.tsx",["317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338"],{"ruleId":"339","severity":1,"message":"340","line":65,"column":30,"nodeType":"341","messageId":"342","endLine":65,"endColumn":32},{"ruleId":"343","severity":1,"message":"344","line":90,"column":171,"nodeType":"345","messageId":"346","endLine":90,"endColumn":172,"suggestions":"347"},{"ruleId":"343","severity":1,"message":"344","line":92,"column":106,"nodeType":"345","messageId":"346","endLine":92,"endColumn":107,"suggestions":"348"},{"ruleId":"343","severity":1,"message":"344","line":110,"column":41,"nodeType":"345","messageId":"346","endLine":110,"endColumn":42,"suggestions":"349"},{"ruleId":"339","severity":1,"message":"340","line":135,"column":33,"nodeType":"341","messageId":"342","endLine":135,"endColumn":35},{"ruleId":"339","severity":1,"message":"340","line":138,"column":33,"nodeType":"341","messageId":"342","endLine":138,"endColumn":35},{"ruleId":"339","severity":1,"message":"340","line":140,"column":40,"nodeType":"341","messageId":"342","endLine":140,"endColumn":42},{"ruleId":"339","severity":1,"message":"350","line":150,"column":21,"nodeType":"341","messageId":"342","endLine":150,"endColumn":23},{"ruleId":"339","severity":1,"message":"350","line":150,"column":44,"nodeType":"341","messageId":"342","endLine":150,"endColumn":46},{"ruleId":"351","severity":1,"message":"352","line":155,"column":22,"nodeType":"353","messageId":"342","endLine":155,"endColumn":26},{"ruleId":"339","severity":1,"message":"350","line":166,"column":426,"nodeType":"341","messageId":"342","endLine":166,"endColumn":428},{"ruleId":"339","severity":1,"message":"350","line":166,"column":485,"nodeType":"341","messageId":"342","endLine":166,"endColumn":487},{"ruleId":"354","replacedBy":"355"},{"ruleId":"356","replacedBy":"357"},{"ruleId":"358","severity":1,"message":"359","line":9,"column":10,"nodeType":"360","messageId":"361","endLine":9,"endColumn":14},{"ruleId":"358","severity":1,"message":"362","line":1,"column":17,"nodeType":"360","messageId":"361","endLine":1,"endColumn":26},{"ruleId":"358","severity":1,"message":"363","line":1,"column":28,"nodeType":"360","messageId":"361","endLine":1,"endColumn":42},{"ruleId":"358","severity":1,"message":"364","line":2,"column":8,"nodeType":"360","messageId":"361","endLine":2,"endColumn":12},{"ruleId":"358","severity":1,"message":"365","line":4,"column":8,"nodeType":"360","messageId":"361","endLine":4,"endColumn":16},{"ruleId":"358","severity":1,"message":"366","line":6,"column":9,"nodeType":"360","messageId":"361","endLine":6,"endColumn":12},{"ruleId":"358","severity":1,"message":"359","line":6,"column":14,"nodeType":"360","messageId":"361","endLine":6,"endColumn":18},{"ruleId":"358","severity":1,"message":"367","line":6,"column":20,"nodeType":"360","messageId":"361","endLine":6,"endColumn":24},{"ruleId":"358","severity":1,"message":"368","line":7,"column":10,"nodeType":"360","messageId":"361","endLine":7,"endColumn":27},{"ruleId":"358","severity":1,"message":"369","line":8,"column":10,"nodeType":"360","messageId":"361","endLine":8,"endColumn":23},{"ruleId":"358","severity":1,"message":"370","line":9,"column":10,"nodeType":"360","messageId":"361","endLine":9,"endColumn":19},{"ruleId":"358","severity":1,"message":"371","line":14,"column":10,"nodeType":"360","messageId":"361","endLine":14,"endColumn":17},{"ruleId":"358","severity":1,"message":"372","line":16,"column":8,"nodeType":"360","messageId":"361","endLine":16,"endColumn":17},{"ruleId":"358","severity":1,"message":"373","line":23,"column":8,"nodeType":"360","messageId":"361","endLine":23,"endColumn":17},{"ruleId":"358","severity":1,"message":"374","line":25,"column":8,"nodeType":"360","messageId":"361","endLine":25,"endColumn":20},{"ruleId":"358","severity":1,"message":"375","line":26,"column":8,"nodeType":"360","messageId":"361","endLine":26,"endColumn":16},{"ruleId":"358","severity":1,"message":"376","line":95,"column":12,"nodeType":"360","messageId":"361","endLine":95,"endColumn":19},{"ruleId":"358","severity":1,"message":"377","line":95,"column":21,"nodeType":"360","messageId":"361","endLine":95,"endColumn":31},{"ruleId":"354","replacedBy":"378"},{"ruleId":"356","replacedBy":"379"},{"ruleId":"358","severity":1,"message":"380","line":1,"column":10,"nodeType":"360","messageId":"361","endLine":1,"endColumn":22},{"ruleId":"358","severity":1,"message":"381","line":2,"column":8,"nodeType":"360","messageId":"361","endLine":2,"endColumn":13},{"ruleId":"358","severity":1,"message":"367","line":4,"column":10,"nodeType":"360","messageId":"361","endLine":4,"endColumn":14},{"ruleId":"358","severity":1,"message":"382","line":7,"column":11,"nodeType":"360","messageId":"361","endLine":7,"endColumn":18},{"ruleId":"354","replacedBy":"383"},{"ruleId":"356","replacedBy":"384"},{"ruleId":"358","severity":1,"message":"385","line":1,"column":17,"nodeType":"360","messageId":"361","endLine":1,"endColumn":26},{"ruleId":"358","severity":1,"message":"386","line":1,"column":28,"nodeType":"360","messageId":"361","endLine":1,"endColumn":35},{"ruleId":"358","severity":1,"message":"387","line":1,"column":37,"nodeType":"360","messageId":"361","endLine":1,"endColumn":45},{"ruleId":"358","severity":1,"message":"388","line":2,"column":8,"nodeType":"360","messageId":"361","endLine":2,"endColumn":18},{"ruleId":"358","severity":1,"message":"389","line":6,"column":11,"nodeType":"360","messageId":"361","endLine":6,"endColumn":35},{"ruleId":"358","severity":1,"message":"390","line":1,"column":10,"nodeType":"360","messageId":"361","endLine":1,"endColumn":14},{"ruleId":"358","severity":1,"message":"391","line":4,"column":10,"nodeType":"360","messageId":"361","endLine":4,"endColumn":23},{"ruleId":"354","replacedBy":"392"},{"ruleId":"356","replacedBy":"393"},{"ruleId":"354","replacedBy":"394"},{"ruleId":"356","replacedBy":"395"},{"ruleId":"354","replacedBy":"396"},{"ruleId":"356","replacedBy":"397"},{"ruleId":"354","replacedBy":"398"},{"ruleId":"356","replacedBy":"399"},{"ruleId":"358","severity":1,"message":"366","line":3,"column":10,"nodeType":"360","messageId":"361","endLine":3,"endColumn":13},{"ruleId":"358","severity":1,"message":"359","line":3,"column":15,"nodeType":"360","messageId":"361","endLine":3,"endColumn":19},{"ruleId":"358","severity":1,"message":"400","line":1,"column":10,"nodeType":"360","messageId":"361","endLine":1,"endColumn":21},{"ruleId":"358","severity":1,"message":"401","line":1,"column":23,"nodeType":"360","messageId":"361","endLine":1,"endColumn":46},{"ruleId":"358","severity":1,"message":"402","line":1,"column":48,"nodeType":"360","messageId":"361","endLine":1,"endColumn":62},{"ruleId":"358","severity":1,"message":"403","line":2,"column":10,"nodeType":"360","messageId":"361","endLine":2,"endColumn":20},{"ruleId":"358","severity":1,"message":"404","line":3,"column":10,"nodeType":"360","messageId":"361","endLine":3,"endColumn":14},{"ruleId":"358","severity":1,"message":"405","line":3,"column":16,"nodeType":"360","messageId":"361","endLine":3,"endColumn":26},{"ruleId":"358","severity":1,"message":"385","line":5,"column":17,"nodeType":"360","messageId":"361","endLine":5,"endColumn":26},{"ruleId":"358","severity":1,"message":"387","line":5,"column":28,"nodeType":"360","messageId":"361","endLine":5,"endColumn":36},{"ruleId":"358","severity":1,"message":"386","line":5,"column":38,"nodeType":"360","messageId":"361","endLine":5,"endColumn":45},{"ruleId":"358","severity":1,"message":"366","line":6,"column":10,"nodeType":"360","messageId":"361","endLine":6,"endColumn":13},{"ruleId":"358","severity":1,"message":"406","line":6,"column":15,"nodeType":"360","messageId":"361","endLine":6,"endColumn":21},{"ruleId":"358","severity":1,"message":"359","line":6,"column":23,"nodeType":"360","messageId":"361","endLine":6,"endColumn":27},{"ruleId":"358","severity":1,"message":"407","line":6,"column":29,"nodeType":"360","messageId":"361","endLine":6,"endColumn":36},{"ruleId":"358","severity":1,"message":"367","line":6,"column":38,"nodeType":"360","messageId":"361","endLine":6,"endColumn":42},{"ruleId":"358","severity":1,"message":"408","line":7,"column":10,"nodeType":"360","messageId":"361","endLine":7,"endColumn":26},{"ruleId":"358","severity":1,"message":"409","line":7,"column":47,"nodeType":"360","messageId":"361","endLine":7,"endColumn":65},{"ruleId":"358","severity":1,"message":"410","line":9,"column":10,"nodeType":"360","messageId":"361","endLine":9,"endColumn":17},{"ruleId":"358","severity":1,"message":"411","line":10,"column":10,"nodeType":"360","messageId":"361","endLine":10,"endColumn":15},{"ruleId":"358","severity":1,"message":"412","line":18,"column":11,"nodeType":"360","messageId":"361","endLine":18,"endColumn":21},{"ruleId":"358","severity":1,"message":"413","line":32,"column":25,"nodeType":"360","messageId":"361","endLine":32,"endColumn":30},{"ruleId":"339","severity":1,"message":"350","line":57,"column":23,"nodeType":"341","messageId":"342","endLine":57,"endColumn":25},{"ruleId":"339","severity":1,"message":"350","line":57,"column":38,"nodeType":"341","messageId":"342","endLine":57,"endColumn":40},{"ruleId":"339","severity":1,"message":"350","line":60,"column":22,"nodeType":"341","messageId":"342","endLine":60,"endColumn":24},{"ruleId":"339","severity":1,"message":"350","line":60,"column":36,"nodeType":"341","messageId":"342","endLine":60,"endColumn":38},{"ruleId":"358","severity":1,"message":"414","line":2,"column":10,"nodeType":"360","messageId":"361","endLine":2,"endColumn":14},{"ruleId":"358","severity":1,"message":"359","line":4,"column":15,"nodeType":"360","messageId":"361","endLine":4,"endColumn":19},{"ruleId":"358","severity":1,"message":"407","line":4,"column":21,"nodeType":"360","messageId":"361","endLine":4,"endColumn":28},{"ruleId":"358","severity":1,"message":"415","line":22,"column":56,"nodeType":"360","messageId":"361","endLine":22,"endColumn":66},{"ruleId":"358","severity":1,"message":"416","line":32,"column":60,"nodeType":"360","messageId":"361","endLine":32,"endColumn":72},{"ruleId":"358","severity":1,"message":"403","line":2,"column":10,"nodeType":"360","messageId":"361","endLine":2,"endColumn":20},{"ruleId":"358","severity":1,"message":"404","line":3,"column":10,"nodeType":"360","messageId":"361","endLine":3,"endColumn":14},{"ruleId":"358","severity":1,"message":"366","line":5,"column":10,"nodeType":"360","messageId":"361","endLine":5,"endColumn":13},{"ruleId":"358","severity":1,"message":"406","line":5,"column":15,"nodeType":"360","messageId":"361","endLine":5,"endColumn":21},{"ruleId":"358","severity":1,"message":"359","line":5,"column":23,"nodeType":"360","messageId":"361","endLine":5,"endColumn":27},{"ruleId":"358","severity":1,"message":"407","line":5,"column":29,"nodeType":"360","messageId":"361","endLine":5,"endColumn":36},{"ruleId":"358","severity":1,"message":"367","line":5,"column":38,"nodeType":"360","messageId":"361","endLine":5,"endColumn":42},{"ruleId":"358","severity":1,"message":"409","line":6,"column":73,"nodeType":"360","messageId":"361","endLine":6,"endColumn":91},{"ruleId":"358","severity":1,"message":"410","line":8,"column":10,"nodeType":"360","messageId":"361","endLine":8,"endColumn":17},{"ruleId":"358","severity":1,"message":"411","line":9,"column":10,"nodeType":"360","messageId":"361","endLine":9,"endColumn":15},{"ruleId":"358","severity":1,"message":"417","line":38,"column":60,"nodeType":"360","messageId":"361","endLine":38,"endColumn":73},{"ruleId":"358","severity":1,"message":"418","line":39,"column":16,"nodeType":"360","messageId":"361","endLine":39,"endColumn":30},{"ruleId":"358","severity":1,"message":"419","line":39,"column":58,"nodeType":"360","messageId":"361","endLine":39,"endColumn":70},{"ruleId":"358","severity":1,"message":"420","line":50,"column":10,"nodeType":"360","messageId":"361","endLine":50,"endColumn":19},{"ruleId":"358","severity":1,"message":"421","line":50,"column":21,"nodeType":"360","messageId":"361","endLine":50,"endColumn":33},{"ruleId":"358","severity":1,"message":"422","line":111,"column":17,"nodeType":"360","messageId":"361","endLine":111,"endColumn":27},{"ruleId":"339","severity":1,"message":"340","line":137,"column":95,"nodeType":"341","messageId":"342","endLine":137,"endColumn":97},{"ruleId":"339","severity":1,"message":"340","line":137,"column":113,"nodeType":"341","messageId":"342","endLine":137,"endColumn":115},{"ruleId":"354","replacedBy":"423"},{"ruleId":"356","replacedBy":"424"},{"ruleId":"354","replacedBy":"425"},{"ruleId":"356","replacedBy":"426"},{"ruleId":"354","replacedBy":"427"},{"ruleId":"356","replacedBy":"428"},{"ruleId":"358","severity":1,"message":"429","line":1,"column":36,"nodeType":"360","messageId":"361","endLine":1,"endColumn":46},{"ruleId":"358","severity":1,"message":"430","line":1,"column":48,"nodeType":"360","messageId":"361","endLine":1,"endColumn":52},{"ruleId":"358","severity":1,"message":"366","line":5,"column":10,"nodeType":"360","messageId":"361","endLine":5,"endColumn":13},{"ruleId":"358","severity":1,"message":"359","line":5,"column":23,"nodeType":"360","messageId":"361","endLine":5,"endColumn":27},{"ruleId":"358","severity":1,"message":"407","line":5,"column":29,"nodeType":"360","messageId":"361","endLine":5,"endColumn":36},{"ruleId":"358","severity":1,"message":"431","line":29,"column":7,"nodeType":"360","messageId":"361","endLine":29,"endColumn":11},{"ruleId":"339","severity":1,"message":"350","line":57,"column":101,"nodeType":"341","messageId":"342","endLine":57,"endColumn":103},{"ruleId":"358","severity":1,"message":"432","line":7,"column":10,"nodeType":"360","messageId":"361","endLine":7,"endColumn":17},{"ruleId":"358","severity":1,"message":"433","line":18,"column":60,"nodeType":"360","messageId":"361","endLine":18,"endColumn":73},{"ruleId":"354","replacedBy":"434"},{"ruleId":"356","replacedBy":"435"},{"ruleId":"358","severity":1,"message":"436","line":1,"column":10,"nodeType":"360","messageId":"361","endLine":1,"endColumn":18},{"ruleId":"358","severity":1,"message":"437","line":4,"column":10,"nodeType":"360","messageId":"361","endLine":4,"endColumn":13},{"ruleId":"358","severity":1,"message":"433","line":146,"column":60,"nodeType":"360","messageId":"361","endLine":146,"endColumn":73},{"ruleId":"358","severity":1,"message":"418","line":147,"column":16,"nodeType":"360","messageId":"361","endLine":147,"endColumn":30},{"ruleId":"358","severity":1,"message":"419","line":147,"column":58,"nodeType":"360","messageId":"361","endLine":147,"endColumn":70},{"ruleId":"358","severity":1,"message":"438","line":148,"column":16,"nodeType":"360","messageId":"361","endLine":148,"endColumn":33},{"ruleId":"358","severity":1,"message":"439","line":148,"column":64,"nodeType":"360","messageId":"361","endLine":148,"endColumn":79},{"ruleId":"358","severity":1,"message":"440","line":236,"column":15,"nodeType":"360","messageId":"361","endLine":236,"endColumn":24},{"ruleId":"339","severity":1,"message":"340","line":494,"column":128,"nodeType":"341","messageId":"342","endLine":494,"endColumn":130},{"ruleId":"339","severity":1,"message":"350","line":523,"column":71,"nodeType":"341","messageId":"342","endLine":523,"endColumn":73},{"ruleId":"339","severity":1,"message":"340","line":523,"column":140,"nodeType":"341","messageId":"342","endLine":523,"endColumn":142},{"ruleId":"339","severity":1,"message":"340","line":523,"column":161,"nodeType":"341","messageId":"342","endLine":523,"endColumn":163},{"ruleId":"358","severity":1,"message":"367","line":3,"column":17,"nodeType":"360","messageId":"361","endLine":3,"endColumn":21},{"ruleId":"358","severity":1,"message":"441","line":140,"column":7,"nodeType":"360","messageId":"361","endLine":140,"endColumn":33},{"ruleId":"354","replacedBy":"442"},{"ruleId":"356","replacedBy":"443"},{"ruleId":"358","severity":1,"message":"372","line":2,"column":8,"nodeType":"360","messageId":"361","endLine":2,"endColumn":17},{"ruleId":"358","severity":1,"message":"444","line":3,"column":8,"nodeType":"360","messageId":"361","endLine":3,"endColumn":12},{"ruleId":"358","severity":1,"message":"445","line":4,"column":10,"nodeType":"360","messageId":"361","endLine":4,"endColumn":17},{"ruleId":"358","severity":1,"message":"446","line":10,"column":8,"nodeType":"360","messageId":"361","endLine":10,"endColumn":23},{"ruleId":"358","severity":1,"message":"447","line":12,"column":8,"nodeType":"360","messageId":"361","endLine":12,"endColumn":22},{"ruleId":"358","severity":1,"message":"448","line":13,"column":8,"nodeType":"360","messageId":"361","endLine":13,"endColumn":15},{"ruleId":"358","severity":1,"message":"449","line":14,"column":8,"nodeType":"360","messageId":"361","endLine":14,"endColumn":18},{"ruleId":"358","severity":1,"message":"450","line":16,"column":8,"nodeType":"360","messageId":"361","endLine":16,"endColumn":16},{"ruleId":"358","severity":1,"message":"403","line":17,"column":8,"nodeType":"360","messageId":"361","endLine":17,"endColumn":18},{"ruleId":"358","severity":1,"message":"451","line":18,"column":8,"nodeType":"360","messageId":"361","endLine":18,"endColumn":15},{"ruleId":"358","severity":1,"message":"452","line":19,"column":8,"nodeType":"360","messageId":"361","endLine":19,"endColumn":24},{"ruleId":"358","severity":1,"message":"453","line":20,"column":8,"nodeType":"360","messageId":"361","endLine":20,"endColumn":14},{"ruleId":"358","severity":1,"message":"454","line":21,"column":8,"nodeType":"360","messageId":"361","endLine":21,"endColumn":18},{"ruleId":"358","severity":1,"message":"455","line":22,"column":8,"nodeType":"360","messageId":"361","endLine":22,"endColumn":22},{"ruleId":"358","severity":1,"message":"456","line":132,"column":10,"nodeType":"360","messageId":"361","endLine":132,"endColumn":18},{"ruleId":"358","severity":1,"message":"457","line":132,"column":20,"nodeType":"360","messageId":"361","endLine":132,"endColumn":31},{"ruleId":"358","severity":1,"message":"458","line":133,"column":16,"nodeType":"360","messageId":"361","endLine":133,"endColumn":23},{"ruleId":"358","severity":1,"message":"459","line":134,"column":10,"nodeType":"360","messageId":"361","endLine":134,"endColumn":15},{"ruleId":"358","severity":1,"message":"460","line":134,"column":17,"nodeType":"360","messageId":"361","endLine":134,"endColumn":25},{"ruleId":"358","severity":1,"message":"461","line":135,"column":23,"nodeType":"360","messageId":"361","endLine":135,"endColumn":37},{"ruleId":"358","severity":1,"message":"462","line":166,"column":9,"nodeType":"360","messageId":"361","endLine":166,"endColumn":18},{"ruleId":"358","severity":1,"message":"463","line":189,"column":25,"nodeType":"360","messageId":"361","endLine":189,"endColumn":32},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["464","465"],["466","467"],["468","469"],"Expected '!==' and instead saw '!='.","no-eval","eval can be harmful.","CallExpression","no-native-reassign",["470"],"no-negated-in-lhs",["471"],"@typescript-eslint/no-unused-vars","'Flex' is defined but never used.","Identifier","unusedVar","'createRef' is defined but never used.","'SetStateAction' is defined but never used.","'logo' is defined but never used.","'Provider' is defined but never used.","'Box' is defined but never used.","'Text' is defined but never used.","'UpdatersContainer' is defined but never used.","'DaysContainer' is defined but never used.","'Container' is defined but never used.","'Sidebar' is defined but never used.","'PropTypes' is defined but never used.","'InboxIcon' is defined but never used.","'ListItemIcon' is defined but never used.","'MailIcon' is defined but never used.","'tabname' is assigned a value but never used.","'setTabname' is assigned a value but never used.",["470"],["471"],"'useLazyQuery' is defined but never used.","'React' is defined but never used.","'loading' is assigned a value but never used.",["470"],["471"],"'useEffect' is defined but never used.","'useMemo' is defined but never used.","'useState' is defined but never used.","'usePromise' is defined but never used.","'ResultsInfo_insert_input' is defined but never used.","'Home' is defined but never used.","'WeightsTables' is defined but never used.",["470"],["471"],["470"],["471"],["470"],["471"],["470"],["471"],"'FetchResult' is defined but never used.","'MutationFunctionOptions' is defined but never used.","'MutationResult' is defined but never used.","'IconButton' is defined but never used.","'Flag' is defined but never used.","'Visibility' is defined but never used.","'Button' is defined but never used.","'Heading' is defined but never used.","'GET_CURRENT_DATE' is defined but never used.","'GET_DIFF_DAYS_STRS' is defined but never used.","'Loading' is defined but never used.","'Table' is defined but never used.","'Eyecatcher' is defined but never used.","'error' is assigned a value but never used.","'Card' is defined but never used.","'race_error' is assigned a value but never used.","'horses_error' is assigned a value but never used.","'results_error' is assigned a value but never used.","'tracks_loading' is assigned a value but never used.","'tracks_error' is assigned a value but never used.","'showClick' is assigned a value but never used.","'setShowClick' is assigned a value but never used.","'runner_arr' is assigned a value but never used.",["470"],["471"],["470"],["471"],["470"],["471"],"'CardHeader' is defined but never used.","'Icon' is defined but never used.","'icon' is assigned a value but never used.","'Meeting' is defined but never used.","'meeting_error' is assigned a value but never used.",["470"],["471"],"'useQuery' is defined but never used.","'M_Q' is defined but never used.","'h_history_loading' is assigned a value but never used.","'h_history_error' is assigned a value but never used.","'r_runners' is assigned a value but never used.","'history' is assigned a value but never used.",["470"],["471"],"'clsx' is defined but never used.","'lighten' is defined but never used.","'TablePagination' is defined but never used.","'TableSortLabel' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'Checkbox' is defined but never used.","'Tooltip' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'DeleteIcon' is defined but never used.","'FilterListIcon' is defined but never used.","'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.","'setPage' is assigned a value but never used.","'dense' is assigned a value but never used.","'setDense' is assigned a value but never used.","'setRowsPerPage' is assigned a value but never used.","'emptyRows' is assigned a value but never used.","'labelId' is assigned a value but never used.",{"messageId":"472","fix":"473","desc":"474"},{"messageId":"475","fix":"476","desc":"477"},{"messageId":"472","fix":"478","desc":"474"},{"messageId":"475","fix":"479","desc":"477"},{"messageId":"472","fix":"480","desc":"474"},{"messageId":"475","fix":"481","desc":"477"},"no-global-assign","no-unsafe-negation","removeEscape",{"range":"482","text":"483"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"484","text":"485"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"486","text":"483"},{"range":"487","text":"485"},{"range":"488","text":"483"},{"range":"489","text":"485"},[2713,2714],"",[2713,2713],"\\",[3045,3046],[3045,3045],[3742,3743],[3742,3742]]
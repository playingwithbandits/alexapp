[{"E:\\Dev Work\\HorseV2\\alexapp\\src\\provider.tsx":"1","E:\\Dev Work\\HorseV2\\alexapp\\src\\queries\\myQueries.tsx":"2","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Trainers\\Trainers.tsx":"3","E:\\Dev Work\\HorseV2\\alexapp\\src\\App.tsx":"4","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Loading\\Loading.tsx":"5","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Loading\\index.ts":"6","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Table\\Table.tsx":"7","E:\\Dev Work\\HorseV2\\alexapp\\src\\Helpers\\HelperFunc.tsx":"8","E:\\Dev Work\\HorseV2\\alexapp\\src\\index.tsx":"9","E:\\Dev Work\\HorseV2\\alexapp\\src\\assets\\styling\\mainTheme.tsx":"10","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Table\\index.ts":"11","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\UpdateTablePanel\\UpdateTablePanel.tsx":"12","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\UpdateTablePanel\\index.ts":"13","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\UpdatersContainer\\index.ts":"14","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\EyecatchersUpdater\\index.ts":"15","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\TodayUpdater\\TodayUpdater.tsx":"16","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\DateUpdater\\DateUpdater.tsx":"17","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\EyecatchersUpdater\\EyecatchersUpdater.tsx":"18","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\ResultsUpdater\\ResultsUpdater.tsx":"19","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\TomorrowUpdater\\TomorrowUpdater.tsx":"20"},{"size":263,"mtime":1612385295491,"results":"21","hashOfConfig":"22"},{"size":4211,"mtime":1612464432766,"results":"23","hashOfConfig":"22"},{"size":216,"mtime":1612101079847,"results":"24","hashOfConfig":"22"},{"size":406,"mtime":1612458975278,"results":"25","hashOfConfig":"22"},{"size":195,"mtime":1612102035236,"results":"26","hashOfConfig":"22"},{"size":35,"mtime":1612102018479,"results":"27","hashOfConfig":"22"},{"size":646,"mtime":1612216916489,"results":"28","hashOfConfig":"22"},{"size":7880,"mtime":1612463380653,"results":"29","hashOfConfig":"22"},{"size":562,"mtime":1612026271753,"results":"30","hashOfConfig":"22"},{"size":351,"mtime":1612027016724,"results":"31","hashOfConfig":"22"},{"size":31,"mtime":1612127401744,"results":"32","hashOfConfig":"22"},{"size":2212,"mtime":1612463809364,"results":"33","hashOfConfig":"22"},{"size":53,"mtime":1612383293609,"results":"34","hashOfConfig":"22"},{"size":55,"mtime":1612459476672,"results":"35","hashOfConfig":"22"},{"size":57,"mtime":1612459469105,"results":"36","hashOfConfig":"22"},{"size":690,"mtime":1612459507925,"results":"37","hashOfConfig":"22"},{"size":5964,"mtime":1612465379135,"results":"38","hashOfConfig":"22"},{"size":3371,"mtime":1612458874007,"results":"39","hashOfConfig":"22"},{"size":7008,"mtime":1612458828496,"results":"40","hashOfConfig":"22"},{"size":608,"mtime":1612459504677,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"34jcos",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Dev Work\\HorseV2\\alexapp\\src\\provider.tsx",[],"E:\\Dev Work\\HorseV2\\alexapp\\src\\queries\\myQueries.tsx",[],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Trainers\\Trainers.tsx",["92"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\App.tsx",["93","94","95"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Provider from './provider';\n\nimport {Box, Flex, Text} from \"rebass\";\nimport { UpdatersContainer } from './components/Updaters/UpdatersContainer';\n\n\nconst App: React.FC = () => (\n    <Flex flexDirection={[\"column\",\"row\"]}>\n        <Box>\n            <UpdatersContainer />\n        </Box>\n    </Flex>\n);\n\nexport default App;\n",["96","97"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Loading\\Loading.tsx",[],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Loading\\index.ts",[],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Table\\Table.tsx",["98","99"],"import React from \"react\";\r\nimport { Box, Flex, Text } from \"rebass\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport SortIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport { Card } from \"@material-ui/core\";\r\n\r\nexport interface TableProps {\r\n  data: any;\r\n  columns: any;\r\n  title?: string;\r\n  defaultSortField?: string;\r\n  pagination?: boolean;\r\n  selectableRows?: boolean;\r\n  size?: string;\r\n  stickyHeader?: boolean;\r\n}\r\n\r\nexport const Table: React.FC<TableProps> = (props) => {\r\n  return <Box>\r\n    <Card>\r\n        <DataTable\r\n          sortIcon={<SortIcon />}\r\n          {...props}\r\n        />\r\n      </Card>\r\n  </Box>;\r\n};\r\n","E:\\Dev Work\\HorseV2\\alexapp\\src\\Helpers\\HelperFunc.tsx",["100","101","102","103","104","105","106","107","108","109","110","111"],"export const p_I = (x:any) => {\r\n    if(x == null){\r\n        return 0;\r\n    }\r\n    let o = parseInt(x);\r\n    if (isNaN(o)) {\r\n        return 0;\r\n    }\r\n    return o;\r\n  };\r\n  export const p_F = (x:any) => {\r\n    if(x == null){\r\n        return 0;\r\n    }\r\n    let o = parseFloat(x);\r\n    if (isNaN(o)) {\r\n      return 0;\r\n    }\r\n    return o;\r\n  }\r\n  \r\n\r\nexport const GET_CURRENT_DATE = () => {\r\n    let today = new Date();\r\n    let todayStr = today.toISOString().split('T')[0];\r\n    return todayStr;\r\n}\r\n\r\nexport const GET_YESTERDAY_DATE = () => {\r\n    let today = new Date();\r\n    const yesterday = new Date(today);\r\n    yesterday.setDate(yesterday.getDate() - 1)\r\n    let yesterdayStr = yesterday.toISOString().split('T')[0];\r\n    return yesterdayStr;\r\n}\r\n\r\nexport const GET_TOMORROW_DATE = () => {\r\n    let today = new Date();\r\n    const yesterday = new Date(today);\r\n    yesterday.setDate(yesterday.getDate() + 1)\r\n    let yesterdayStr = yesterday.toISOString().split('T')[0];\r\n    return yesterdayStr;\r\n}\r\n\r\nexport const GET_DIFF_DAYS_STRS = (d1:string, d2:string) => {\r\n    const date1 = new Date(d1).getTime();\r\n    const date2 = new Date(d2).getTime();\r\n    const diffTime = Math.abs(date2 - date1);\r\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24)); \r\n}\r\n\r\nexport const GET_DAYS_BETWEEN_INC = (d1:string, d2:string) => {\r\n    let startDateInclucive = d1;\r\n    let endDateInclucive = d2;\r\n    let listOfDates = [];\r\n    let stopDateLoop = false;\r\n    for(let i = 0; i < 10000; i++){\r\n        let date = new Date(startDateInclucive);\r\n        date.setDate(date.getDate() - i);\r\n        let tempEndDateString = date.toISOString().split('T')[0];\r\n        \r\n        if(!stopDateLoop){\r\n            listOfDates.push(tempEndDateString);\r\n        }\r\n        if(tempEndDateString == endDateInclucive){\r\n            stopDateLoop = true;\r\n        }\r\n    }\r\n    return listOfDates as string[]; \r\n}\r\n\r\nexport const GET_P_URL = (page_url:string) => {\r\n    return \"/phps/getP.php?q=\" + encodeURIComponent(page_url);\r\n}\r\n\r\nexport const GET_PAGE_DIV = async (page_url:string) => {\r\n    let page_div = document.createElement(\"div\");\r\n    try {\r\n        const page_div_str = await fetch(GET_P_URL(page_url)).then(x => x.text());\r\n        page_div.innerHTML = page_div_str;\r\n    } catch (err) {\r\n        console.log(err);\r\n    } finally {\r\n        return page_div;\r\n    }\r\n}\r\n\r\nexport const queryNodeAll = (x: any, q: any) => x ? [...(x.querySelectorAll(q) || [])] : [];\r\nexport const queryNode = (x: any, q: any) => x ? x.querySelector(q) : null;\r\nexport const queryNodeText = (x : any) => (((x && x.childNodes && x.childNodes.length) ? x.childNodes[0] : null) || {\"textContent\": \"-\"}).textContent.replace(/[^a-zA-Z0-9\\/ ]+/g,\" \").replace(/'/g, \"\").replace(/  +/g, ' ').trim();\r\nexport const queryNodeTextNoEdits = (x : any) => (((x && x.childNodes && x.childNodes.length) ? x.childNodes[0] : null) || {\"textContent\": \"-\"}).textContent.trim();\r\nexport const queryNodeTextAll = (x : any) => (x || {\"textContent\": \"-\"}).textContent.replace(/[^a-zA-Z0-9\\/ ]+/g,\" \").replace(/'/g, \"\").replace(/  +/g, ' ').trim();\r\n\r\nexport const queryNodeHref = (x : any) => ((x || {\"attributes\": {\"href\": {\"value\": \"-\" }}}).attributes['href'] || {\"value\":\"-\"}).value.replace(/'/g, \"\").trim();\r\n\r\nexport const getAllRaces = async (urlArr: string[]) => {\r\n    let results: HTMLDivElement[] = [];\r\n    try {\r\n        results = await Promise.all(urlArr.map(x => GET_PAGE_DIV(x)));                \r\n    } catch (err) {\r\n        console.log(err);\r\n    } finally {\r\n        return {urlArr, results};\r\n    }\r\n};\r\n\r\nexport const queryNodeAttr = (x : HTMLDivElement, y : string) => {\r\n    let attr = x?.getAttribute(y);\r\n    if(attr){\r\n        return attr.replace(/[^a-zA-Z0-9\\/ ]+/g,\" \").replace(/'/g, \"\").replace(/  +/g, ' ').trim();\r\n    }else{\r\n        return \"-\";\r\n    }\r\n};\r\n// export const timeToDecimal = (t :any) => {let arr = t.split(':');let dec = p_I((arr[1] / 6) * 10, 10); return p_F(p_I(arr[0], 10) + '.' + (dec < 10 ? '0' : '') + dec);};\r\n// export const sortJSONBy2Keys = (a :any,b :any,c :any,desc :any) => {let d=(b,c)=>b>c?1:b<c?-1:0;if(desc){return a.sort((a,e) => {let f=a[b],g=e[b],h=a[c],i=e[c];return d([d(g,f),d(i,h)],[d(f,g),d(h,i)])})}else{return a.sort((a,e) => {let f=a[b],g=e[b],h=a[c],i=e[c];return d([d(f,g),d(h,i)],[d(g,f),d(i,h)])})}};\r\nexport const arrayToSet = (a :any,b :any,c :any) => {\r\n    let arrOfb = a.map((x:any)=>x[b]);\r\n    let set_pre:Set<any> = new Set(arrOfb);\r\n    let set_a:any[] = Array.from(set_pre);\r\n    return set_a.map(y=>{\r\n        let temp:any={};\r\n        temp[b]=y;\r\n        temp[c]=a.filter((c:any)=>c[b]===y);\r\n        return temp\r\n    })\r\n};\r\nexport const applySentenceCase = (str :any) => {return(str)?str.replace(/\\w\\S*/g,(txt: string)=>txt.charAt(0).toUpperCase()+txt.substr(1).toLowerCase()):\"\"};\r\nexport const textToFurlong = (input :any) => {\r\n    let output=null;\r\n    if(input){\r\n        let td_v_parts:string[]=input.split(\"m\");\r\n        let td_v_split:string[][]=td_v_parts.map((x: string)=>x.split(\"f\"));\r\n        if(td_v_split !== null){\r\n            if(td_v_split.length==1){\r\n                output=(p_I(td_v_split[0][0]))\r\n            }\r\n            if(td_v_split.length==2){\r\n                output=(p_I(td_v_split[0][0])*8);\r\n                if(td_v_split[1].length==2){\r\n                    output+=(p_I(td_v_split[1][0]))\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return output\r\n};\r\nexport const distanceToWinnerStrToFloat = (code: string) => {\r\n    let result = 0;\r\n    if(code && code != \"undefined\" && code != \"null\"){\r\n        code = \"\"+code;\r\n        let evalStr = code.replace(\"snse\", \"+0.05\").replace(\"nse\", \"+0.1\").replace(\"shd\", \"+0.2\").replace(\"shd\", \"+0.2\").replace(\"snk\", \"+0.25\").replace(\"hd\", \"+0.25\").replace(\"nk\", \"+0.3\").replace(\"½\", \"+0.5\").replace(\"⅓\", \"+0.33\").replace(\"⅔\", \"+0.66\").replace(\"¼\", \"+0.25\").replace(\"¾\", \"+0.75\").replace(\"⅕\", \"+0.20\").replace(\"⅖\", \"+0.40\").replace(\"⅗\", \"+0.60\").replace(\"⅘\", \"+0.80\").replace(\"L\",\"\").replace(\"dht\",\"+0\");        \r\n        let evaled = null;\r\n        try {\r\n            evaled = eval(evalStr)\r\n        } catch (e) {\r\n            console.log(e, evalStr)\r\n        }\r\n        result = p_F(evaled);\r\n    }\r\n    return result;\r\n};\r\n\r\n// export const avgFromObj = (arr :any,key :any,amount :any) => {let tempAvg=0;for(let i=0;i<amount;i++){tempAvg=(arr.reduce(((s,c)=>(a: any,x: { [x: string]: string | number; })=>(x[key]!=null&&x[key]>=tempAvg)?(s+=+x[key])/++c:a)(0,0),0))}\r\n// return tempAvg.toFixed(2)};\r\nexport const isGoodDraw = (draw :any,max_draw :any,drawBias :any) => {let drawGood=!0;if(max_draw>5){let avg_draw=max_draw/2;let lower_bound_draw=avg_draw/2;let higher_bound_draw=avg_draw+(avg_draw/2);switch(drawBias){case \"low\":drawGood=(draw<=avg_draw);break;case \"high\":drawGood=(draw>=avg_draw);break;case \"not-middle\":drawGood=((draw<=lower_bound_draw)||(draw>=higher_bound_draw));break;case \"not stall 1\":drawGood=(draw!=1);break;case \"not1&Low\":drawGood=(draw<=avg_draw)&&(draw!=1);break}}\r\nreturn drawGood};\r\nexport const horseNameToKey = (horse_name :any) => {\r\n    let input = (horse_name).trim();\r\n    let output = (input).toLowerCase().replace(/[(]*nap[)]*$/gi, \"\").replace(/'/gi, \"\").trim();\r\n    return output;\r\n};\r\nexport const placeToPlaceKey = (m_place :any) => {\r\n    let place_out = m_place;\r\n    if(m_place){\r\n        place_out = (m_place).toLowerCase().trim().replace(\"(aw)\", \"-aw\").replace(\"-city\", \"\").replace(/\\s+/g, '-').trim();\r\n    }\r\n    return place_out\r\n};\r\n\r\nexport const trackOkay = (track :any, meetingMappings :any) => {\r\n    let findablePlace = placeToPlaceKey(track);\r\n\r\n    let foundObj = meetingMappings.filter((x:any) => !([\"ireland\",\"dubai\",\"france\"].includes(x[\"location\"].toLowerCase()))).find((x:any) => placeToPlaceKey(x[\"namelower\"]) === findablePlace);\r\n\r\n    return foundObj;\r\n};\r\n\r\n",["112","113"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\index.tsx",[],"E:\\Dev Work\\HorseV2\\alexapp\\src\\assets\\styling\\mainTheme.tsx",[],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Table\\index.ts",[],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\UpdateTablePanel\\UpdateTablePanel.tsx",["114"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\UpdateTablePanel\\index.ts",[],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\UpdatersContainer\\index.ts",[],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\EyecatchersUpdater\\index.ts",[],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\TodayUpdater\\TodayUpdater.tsx",["115","116"],"import { useQuery } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { GET_CURRENT_DATE } from \"../../../Helpers/HelperFunc\";\r\nimport { M_Q } from \"../../../queries/myQueries\";\r\nimport { DateUpdater } from \"../DateUpdater\";\r\n\r\nexport interface TodayUpdaterProps {\r\n  globalDisabledButton: boolean;\r\n  setGlobalDisabledButton: (update: boolean | ((prevState: boolean) => boolean)) => void;\r\n}\r\n\r\nexport const TodayUpdater: React.FC<TodayUpdaterProps> = (props) => {\r\n\r\n  const currentDate = GET_CURRENT_DATE();\r\n  \r\n  return <DateUpdater \r\n  globalDisabledButton={props.globalDisabledButton}\r\n  setGlobalDisabledButton={props.setGlobalDisabledButton}\r\n  date={currentDate}/>;\r\n};\r\n",["117","118"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\DateUpdater\\DateUpdater.tsx",["119","120","121"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\EyecatchersUpdater\\EyecatchersUpdater.tsx",["122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145"],"import { FetchResult, MutationFunctionOptions, MutationResult, useMutation, useQuery } from \"@apollo/client\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { Flag, Visibility } from \"@material-ui/icons\";\r\n\r\nimport React, { useEffect, useState, useMemo } from \"react\";\r\nimport { Box, Button, Flex, Heading, Text } from \"rebass\";\r\nimport { GET_CURRENT_DATE,GET_YESTERDAY_DATE, GET_DIFF_DAYS_STRS, GET_DAYS_BETWEEN_INC, GET_PAGE_DIV, queryNodeAll, queryNode, queryNodeText } from \"../../../Helpers/HelperFunc\";\r\nimport { M_Q } from \"../../../queries/myQueries\";\r\nimport { Loading } from \"../../Loading\";\r\nimport { Table } from \"../../Table\";\r\nimport { UpdateTablePanel } from \"../../UpdateTablePanel\";\r\n\r\nexport interface EyecatchersUpdaterProps {\r\n  globalDisabledButton: boolean;\r\n  setGlobalDisabledButton: (update: boolean | ((prevState: boolean) => boolean)) => void;\r\n}\r\n\r\ninterface Eyecatcher{\r\n  created: string;\r\n  name: string;\r\n  note: string;\r\n}\r\n\r\ninterface Eyecatchers_insert_input{\r\n  created: string;\r\n  name: string;\r\n  note: string;\r\n}\r\n\r\nexport const EyecatchersUpdater: React.FC<EyecatchersUpdaterProps> = (props) => {\r\n  \r\n  const {data, loading, error } = useQuery(M_Q.GET_LAST_EYECATCHERS_DATE, {});\r\n  const [insertEyecatcher] = useMutation(M_Q.INSERT_EYECATCHER); \r\n\r\n  const lastUpdate = data?.Eyecatchers_aggregate?.aggregate?.max?.created;\r\n  const yesterday = GET_YESTERDAY_DATE();\r\n  const listOfDates =  GET_DAYS_BETWEEN_INC(yesterday, lastUpdate);\r\n\r\n  const getDay = async (dateStr: string) => {\r\n    console.log(dateStr);\r\n    try {\r\n      \r\n          props.setGlobalDisabledButton(false);\r\n\r\n          let objects:Eyecatchers_insert_input[] = [];\r\n\r\n          let rp_page = \"https://www.racingpost.com/results/\" +  dateStr;\r\n          const rp_day_node: HTMLDivElement = await GET_PAGE_DIV(rp_page);\r\n          let allMeetings: HTMLDivElement[] = queryNodeAll(rp_day_node, '.rp-raceCourse__panel__details__content');\r\n\r\n          allMeetings.forEach(async (meeting: HTMLDivElement) => {\r\n              let star = queryNodeText((queryNode(meeting, '[data-test-selector=\"link-starPerformerName\"]')));\r\n              let starText = queryNodeText(queryNode(meeting, '[data-test-selector=\"text-starPerformerNotes\"]'));\r\n              let eye = queryNodeText(queryNode(meeting, '[data-test-selector=\"link-eyecatcherName\"]'));\r\n              let eyeText = queryNodeText(queryNode(meeting, '[data-test-selector=\"text-eyecatcherNotes\"]'));\r\n              if(star != \"-\" && star != \"\") {\r\n                  objects.push({name: star, created: dateStr, note: starText});\r\n              }\r\n              if(eye != \"-\" && eye != \"\") {\r\n                  objects.push({name: eye, created: dateStr, note: eyeText});\r\n              }\r\n          })\r\n          \r\n          await insertEyecatcher({\r\n            variables: {objects: objects},\r\n            refetchQueries: [{query: M_Q.GET_LAST_EYECATCHERS_DATE}],\r\n          });\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      props.setGlobalDisabledButton(true);\r\n    }\r\n  };\r\n\r\n  const updateClick = async () => {\r\n      listOfDates?.map(getDay);\r\n  }\r\n  \r\n  return <>\r\n\r\n    <UpdateTablePanel loading={loading} title={\"Eyecatchers\"} lastUpdate={lastUpdate} yesterday={yesterday} onClick={updateClick} globalDisabledButton={props.globalDisabledButton}/>\r\n\r\n  </>\r\n  \r\n};\r\n",["146","147"],"E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\ResultsUpdater\\ResultsUpdater.tsx",["148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165"],"import { useMutation, useQuery } from \"@apollo/client\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { Flag } from \"@material-ui/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { Box, Button, Flex, Heading, Text } from \"rebass\";\r\nimport { distanceToWinnerStrToFloat, getAllRaces, GET_DAYS_BETWEEN_INC, GET_DIFF_DAYS_STRS, GET_YESTERDAY_DATE, p_I, queryNode, queryNodeAll, queryNodeAttr, queryNodeHref, queryNodeText, queryNodeTextNoEdits, textToFurlong, trackOkay } from \"../../../Helpers/HelperFunc\";\r\nimport { M_Q } from \"../../../queries/myQueries\";\r\nimport { Loading } from \"../../Loading\";\r\nimport { Table } from \"../../Table\";\r\nimport { UpdateTablePanel } from \"../../UpdateTablePanel\";\r\n\r\nexport interface ResultsUpdaterProps {\r\n  globalDisabledButton: boolean;\r\n  setGlobalDisabledButton: (update: boolean | ((prevState: boolean) => boolean)) => void;\r\n}\r\n\r\n\r\ninterface ResultsInfo_insert_input {\r\n  h_id: String;\r\n  h_link: String;\r\n  h_lostdist: any;\r\n  h_name: String;\r\n  h_or: any;\r\n  h_pos: String;\r\n  r_code: String;\r\n  r_date: String;\r\n  r_distancef: any;\r\n  r_id: String;\r\n  r_place: String;\r\n  r_requirements: String;\r\n}\r\n\r\nexport const ResultsUpdater: React.FC<ResultsUpdaterProps> = (props) => {\r\n  const res1 = useQuery(M_Q.GET_ALL_RESULTS, {});\r\n  const res2 = useQuery(M_Q.GET_ALL_TRACKS_INFO, {});\r\n\r\n  const [\r\n    { loading: results_loading, data: results_data, error: results_error},\r\n    { loading: tracks_loading, data: tracks_data, error: tracks_error }\r\n] = [res1, res2];\r\n\r\n  const [insertResult] = useMutation(M_Q.INSERT_RESULT); \r\n\r\n  const results = results_data?.ResultsInfo;\r\n  const tracks_info = tracks_data?.TrackInformation;\r\n  const lastUpdate = results_data?.ResultsInfo_aggregate?.aggregate?.max?.r_date;\r\n  const yesterday = GET_YESTERDAY_DATE();\r\n  const listOfDates =  GET_DAYS_BETWEEN_INC(yesterday, lastUpdate);\r\n\r\n  const [showClick, setShowClick] = useState(true);\r\n  \r\n  const updateClick = async () => {\r\n    try {\r\n\r\n      props.setGlobalDisabledButton(false);\r\n\r\n      let objects:ResultsInfo_insert_input[] = [];\r\n\r\n      let listOfResultsUrls = listOfDates.map(x => `https://www.racingpost.com/results/${x}`);\r\n          \r\n      let allDaysResults = await getAllRaces(listOfResultsUrls);\r\n      \r\n      for (let daysResultsIndex in allDaysResults.results){\r\n  \r\n        let daysResults  = allDaysResults.results[daysResultsIndex];\r\n        let daysResults_div = daysResults;\r\n        \r\n        let fullResults = queryNodeAll(daysResults_div, '[data-test-selector=\"button-fullResult\"]').map(x => \"https://www.racingpost.com\" + queryNodeHref(x));\r\n        \r\n        fullResults = fullResults.filter(x => {\r\n            let okay = false;\r\n            let urlSplit = x?.split(\"/\") || [];\r\n            if(urlSplit.length > 5){\r\n                okay = trackOkay(urlSplit[5], tracks_info);\r\n            }\r\n            return okay;\r\n        });\r\n      \r\n        let getAllRaces1 = await getAllRaces(fullResults);\r\n        for (let race_index in getAllRaces1.results){\r\n            let result_race  = getAllRaces1.results[race_index];\r\n            let result_race_div = result_race;\r\n            \r\n            let r_id = queryNodeAttr(queryNode(result_race_div, '.rp-resultsWrapper__content'), \"data-analytics-race-id\") || \"-\";\r\n            let r_date = (queryNodeAttr(queryNode(result_race_div, '.rp-resultsWrapper__content'), \"data-analytics-race-date\") || \"-\").replaceAll(\" \", \"-\");\r\n            let r_place = queryNodeTextNoEdits(queryNode(result_race_div, '.rp-raceTimeCourseName__name'))  || \"-\";\r\n            let r_requirements = queryNodeTextNoEdits(queryNode(result_race_div, '.rp-raceTimeCourseName_ratingBandAndAgesAllowed'))  || \"-\";\r\n            \r\n            \r\n            let raceDistance = (queryNodeTextNoEdits(queryNode(result_race_div, '.rp-raceTimeCourseName_distance'))  || \"-\").replace(/\\s/g, '');\r\n            let r_distancef = textToFurlong(raceDistance);\r\n            \r\n            let raceTitle = queryNodeTextNoEdits(queryNode(result_race_div, '.rp-raceTimeCourseName__title'))  || \"-\";\r\n            let raceTitleLower = raceTitle.toLowerCase();\r\n            let isHurdle = raceTitleLower.includes(\"hurdle\");\r\n            let isChase = raceTitleLower.includes(\"chase\");\r\n            let isAW = r_place.toLowerCase().includes(\"(aw)\");\r\n            \r\n            let r_code = \"F\";\r\n            if(isHurdle){\r\n                r_code = \"H\";\r\n            }\r\n            if(isChase){\r\n                r_code = \"C\";\r\n            }\r\n            if(isAW){\r\n                r_code = \"X\";\r\n            }\r\n            \r\n            let runners = queryNodeAll(result_race_div, \".rp-horseTable__mainRow\");\r\n            let runner_arr = [];\r\n            \r\n            runners.forEach(async h => {\r\n                let h_pos = queryNodeText(queryNode(h, '[data-test-selector=\"text-horsePosition\"]'))  || \"-\";\r\n                let h_link = queryNodeHref(queryNode(h, '[data-test-selector=\"link-horseName\"]'))  || \"-\";\r\n                let h_name = queryNodeText(queryNode(h, '[data-test-selector=\"link-horseName\"]'))  || \"-\";\r\n                let h_or = p_I(queryNodeText(queryNode(h, '[data-ending=\"OR\"]'))) || 0; \r\n                let h_link_split = h_link ? h_link.split(\"/\") : [];\r\n                let h_id = \"-\";\r\n                if(h_link_split.length > 3){\r\n                    h_id = h_link_split[3]\r\n                }\r\n                \r\n                let lostdist_node = queryNode(h, '.rp-horseTable__pos__length');\r\n  \r\n                let lostdist = \"\";\r\n                switch(lostdist_node.children.length){\r\n                  case 1: \r\n                    lostdist = lostdist_node.children[0].innerText; \r\n                    break;\r\n                  case 2: \r\n                    lostdist = lostdist_node.children[1].innerText.replaceAll(\"[\",\"\").replaceAll(\"]\",\"\"); \r\n                    break;\r\n                }\r\n                let h_lostdist = distanceToWinnerStrToFloat(lostdist);\r\n                \r\n                let alreadyIn = results.filter((x: { h_id: string; r_id: string; }) => x.h_id == h_id && x.r_id == r_id).length;\r\n                if(!alreadyIn){\r\n                  let requestObj:ResultsInfo_insert_input = {h_pos, h_link, h_name, h_id, h_or, r_id, r_requirements, r_date, r_code, r_place, r_distancef, h_lostdist};\r\n                    //console.log(\"inserting\", requestObj);\r\n                  objects.push(requestObj);\r\n                }\r\n            });\r\n  \r\n        }\r\n      }\r\n      console.log(objects);\r\n      await insertResult({\r\n        variables: {objects: objects},\r\n        refetchQueries: [{query: M_Q.GET_ALL_RESULTS}],\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      props.setGlobalDisabledButton(true);\r\n    }\r\n  }\r\n  \r\n  return <>\r\n    \r\n    <UpdateTablePanel loading={results_loading} title={\"Results\"} lastUpdate={lastUpdate} yesterday={yesterday} onClick={updateClick} globalDisabledButton={props.globalDisabledButton}/>\r\n  </>\r\n  \r\n};","E:\\Dev Work\\HorseV2\\alexapp\\src\\components\\Updaters\\TomorrowUpdater\\TomorrowUpdater.tsx",[],{"ruleId":"166","severity":1,"message":"167","line":2,"column":10,"nodeType":"168","messageId":"169","endLine":2,"endColumn":18},{"ruleId":"166","severity":1,"message":"170","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":12},{"ruleId":"166","severity":1,"message":"171","line":4,"column":8,"nodeType":"168","messageId":"169","endLine":4,"endColumn":16},{"ruleId":"166","severity":1,"message":"172","line":6,"column":20,"nodeType":"168","messageId":"169","endLine":6,"endColumn":24},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"166","severity":1,"message":"177","line":2,"column":15,"nodeType":"168","messageId":"169","endLine":2,"endColumn":19},{"ruleId":"166","severity":1,"message":"172","line":2,"column":21,"nodeType":"168","messageId":"169","endLine":2,"endColumn":25},{"ruleId":"178","severity":1,"message":"179","line":65,"column":30,"nodeType":"180","messageId":"181","endLine":65,"endColumn":32},{"ruleId":"182","severity":1,"message":"183","line":90,"column":171,"nodeType":"184","messageId":"185","endLine":90,"endColumn":172,"suggestions":"186"},{"ruleId":"182","severity":1,"message":"183","line":92,"column":106,"nodeType":"184","messageId":"185","endLine":92,"endColumn":107,"suggestions":"187"},{"ruleId":"182","severity":1,"message":"183","line":110,"column":41,"nodeType":"184","messageId":"185","endLine":110,"endColumn":42,"suggestions":"188"},{"ruleId":"178","severity":1,"message":"179","line":135,"column":33,"nodeType":"180","messageId":"181","endLine":135,"endColumn":35},{"ruleId":"178","severity":1,"message":"179","line":138,"column":33,"nodeType":"180","messageId":"181","endLine":138,"endColumn":35},{"ruleId":"178","severity":1,"message":"179","line":140,"column":40,"nodeType":"180","messageId":"181","endLine":140,"endColumn":42},{"ruleId":"178","severity":1,"message":"189","line":150,"column":21,"nodeType":"180","messageId":"181","endLine":150,"endColumn":23},{"ruleId":"178","severity":1,"message":"189","line":150,"column":44,"nodeType":"180","messageId":"181","endLine":150,"endColumn":46},{"ruleId":"190","severity":1,"message":"191","line":155,"column":22,"nodeType":"192","messageId":"181","endLine":155,"endColumn":26},{"ruleId":"178","severity":1,"message":"189","line":166,"column":426,"nodeType":"180","messageId":"181","endLine":166,"endColumn":428},{"ruleId":"178","severity":1,"message":"189","line":166,"column":485,"nodeType":"180","messageId":"181","endLine":166,"endColumn":487},{"ruleId":"173","replacedBy":"193"},{"ruleId":"175","replacedBy":"194"},{"ruleId":"178","severity":1,"message":"189","line":50,"column":99,"nodeType":"180","messageId":"181","endLine":50,"endColumn":101},{"ruleId":"166","severity":1,"message":"167","line":1,"column":10,"nodeType":"168","messageId":"169","endLine":1,"endColumn":18},{"ruleId":"166","severity":1,"message":"195","line":4,"column":10,"nodeType":"168","messageId":"169","endLine":4,"endColumn":13},{"ruleId":"173","replacedBy":"196"},{"ruleId":"175","replacedBy":"197"},{"ruleId":"166","severity":1,"message":"198","line":39,"column":60,"nodeType":"168","messageId":"169","endLine":39,"endColumn":73},{"ruleId":"166","severity":1,"message":"199","line":40,"column":16,"nodeType":"168","messageId":"169","endLine":40,"endColumn":30},{"ruleId":"166","severity":1,"message":"200","line":40,"column":58,"nodeType":"168","messageId":"169","endLine":40,"endColumn":70},{"ruleId":"166","severity":1,"message":"201","line":1,"column":10,"nodeType":"168","messageId":"169","endLine":1,"endColumn":21},{"ruleId":"166","severity":1,"message":"202","line":1,"column":23,"nodeType":"168","messageId":"169","endLine":1,"endColumn":46},{"ruleId":"166","severity":1,"message":"203","line":1,"column":48,"nodeType":"168","messageId":"169","endLine":1,"endColumn":62},{"ruleId":"166","severity":1,"message":"204","line":2,"column":10,"nodeType":"168","messageId":"169","endLine":2,"endColumn":20},{"ruleId":"166","severity":1,"message":"205","line":3,"column":10,"nodeType":"168","messageId":"169","endLine":3,"endColumn":14},{"ruleId":"166","severity":1,"message":"206","line":3,"column":16,"nodeType":"168","messageId":"169","endLine":3,"endColumn":26},{"ruleId":"166","severity":1,"message":"207","line":5,"column":17,"nodeType":"168","messageId":"169","endLine":5,"endColumn":26},{"ruleId":"166","severity":1,"message":"208","line":5,"column":28,"nodeType":"168","messageId":"169","endLine":5,"endColumn":36},{"ruleId":"166","severity":1,"message":"209","line":5,"column":38,"nodeType":"168","messageId":"169","endLine":5,"endColumn":45},{"ruleId":"166","severity":1,"message":"210","line":6,"column":10,"nodeType":"168","messageId":"169","endLine":6,"endColumn":13},{"ruleId":"166","severity":1,"message":"211","line":6,"column":15,"nodeType":"168","messageId":"169","endLine":6,"endColumn":21},{"ruleId":"166","severity":1,"message":"177","line":6,"column":23,"nodeType":"168","messageId":"169","endLine":6,"endColumn":27},{"ruleId":"166","severity":1,"message":"212","line":6,"column":29,"nodeType":"168","messageId":"169","endLine":6,"endColumn":36},{"ruleId":"166","severity":1,"message":"172","line":6,"column":38,"nodeType":"168","messageId":"169","endLine":6,"endColumn":42},{"ruleId":"166","severity":1,"message":"213","line":7,"column":10,"nodeType":"168","messageId":"169","endLine":7,"endColumn":26},{"ruleId":"166","severity":1,"message":"214","line":7,"column":47,"nodeType":"168","messageId":"169","endLine":7,"endColumn":65},{"ruleId":"166","severity":1,"message":"215","line":9,"column":10,"nodeType":"168","messageId":"169","endLine":9,"endColumn":17},{"ruleId":"166","severity":1,"message":"216","line":10,"column":10,"nodeType":"168","messageId":"169","endLine":10,"endColumn":15},{"ruleId":"166","severity":1,"message":"217","line":18,"column":11,"nodeType":"168","messageId":"169","endLine":18,"endColumn":21},{"ruleId":"166","severity":1,"message":"218","line":32,"column":25,"nodeType":"168","messageId":"169","endLine":32,"endColumn":30},{"ruleId":"178","severity":1,"message":"189","line":56,"column":23,"nodeType":"180","messageId":"181","endLine":56,"endColumn":25},{"ruleId":"178","severity":1,"message":"189","line":56,"column":38,"nodeType":"180","messageId":"181","endLine":56,"endColumn":40},{"ruleId":"178","severity":1,"message":"189","line":59,"column":22,"nodeType":"180","messageId":"181","endLine":59,"endColumn":24},{"ruleId":"178","severity":1,"message":"189","line":59,"column":36,"nodeType":"180","messageId":"181","endLine":59,"endColumn":38},{"ruleId":"173","replacedBy":"219"},{"ruleId":"175","replacedBy":"220"},{"ruleId":"166","severity":1,"message":"204","line":2,"column":10,"nodeType":"168","messageId":"169","endLine":2,"endColumn":20},{"ruleId":"166","severity":1,"message":"205","line":3,"column":10,"nodeType":"168","messageId":"169","endLine":3,"endColumn":14},{"ruleId":"166","severity":1,"message":"210","line":5,"column":10,"nodeType":"168","messageId":"169","endLine":5,"endColumn":13},{"ruleId":"166","severity":1,"message":"211","line":5,"column":15,"nodeType":"168","messageId":"169","endLine":5,"endColumn":21},{"ruleId":"166","severity":1,"message":"177","line":5,"column":23,"nodeType":"168","messageId":"169","endLine":5,"endColumn":27},{"ruleId":"166","severity":1,"message":"212","line":5,"column":29,"nodeType":"168","messageId":"169","endLine":5,"endColumn":36},{"ruleId":"166","severity":1,"message":"172","line":5,"column":38,"nodeType":"168","messageId":"169","endLine":5,"endColumn":42},{"ruleId":"166","severity":1,"message":"214","line":6,"column":73,"nodeType":"168","messageId":"169","endLine":6,"endColumn":91},{"ruleId":"166","severity":1,"message":"215","line":8,"column":10,"nodeType":"168","messageId":"169","endLine":8,"endColumn":17},{"ruleId":"166","severity":1,"message":"216","line":9,"column":10,"nodeType":"168","messageId":"169","endLine":9,"endColumn":15},{"ruleId":"166","severity":1,"message":"221","line":38,"column":60,"nodeType":"168","messageId":"169","endLine":38,"endColumn":73},{"ruleId":"166","severity":1,"message":"199","line":39,"column":16,"nodeType":"168","messageId":"169","endLine":39,"endColumn":30},{"ruleId":"166","severity":1,"message":"200","line":39,"column":58,"nodeType":"168","messageId":"169","endLine":39,"endColumn":70},{"ruleId":"166","severity":1,"message":"222","line":50,"column":10,"nodeType":"168","messageId":"169","endLine":50,"endColumn":19},{"ruleId":"166","severity":1,"message":"223","line":50,"column":21,"nodeType":"168","messageId":"169","endLine":50,"endColumn":33},{"ruleId":"166","severity":1,"message":"224","line":111,"column":17,"nodeType":"168","messageId":"169","endLine":111,"endColumn":27},{"ruleId":"178","severity":1,"message":"179","line":137,"column":95,"nodeType":"180","messageId":"181","endLine":137,"endColumn":97},{"ruleId":"178","severity":1,"message":"179","line":137,"column":113,"nodeType":"180","messageId":"181","endLine":137,"endColumn":115},"@typescript-eslint/no-unused-vars","'useQuery' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'Provider' is defined but never used.","'Text' is defined but never used.","no-native-reassign",["225"],"no-negated-in-lhs",["226"],"'Flex' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["227","228"],["229","230"],["231","232"],"Expected '!==' and instead saw '!='.","no-eval","eval can be harmful.","CallExpression",["225"],["226"],"'M_Q' is defined but never used.",["225"],["226"],"'meeting_error' is assigned a value but never used.","'tracks_loading' is assigned a value but never used.","'tracks_error' is assigned a value but never used.","'FetchResult' is defined but never used.","'MutationFunctionOptions' is defined but never used.","'MutationResult' is defined but never used.","'IconButton' is defined but never used.","'Flag' is defined but never used.","'Visibility' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useMemo' is defined but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'Heading' is defined but never used.","'GET_CURRENT_DATE' is defined but never used.","'GET_DIFF_DAYS_STRS' is defined but never used.","'Loading' is defined but never used.","'Table' is defined but never used.","'Eyecatcher' is defined but never used.","'error' is assigned a value but never used.",["225"],["226"],"'results_error' is assigned a value but never used.","'showClick' is assigned a value but never used.","'setShowClick' is assigned a value but never used.","'runner_arr' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"233","fix":"234","desc":"235"},{"messageId":"236","fix":"237","desc":"238"},{"messageId":"233","fix":"239","desc":"235"},{"messageId":"236","fix":"240","desc":"238"},{"messageId":"233","fix":"241","desc":"235"},{"messageId":"236","fix":"242","desc":"238"},"removeEscape",{"range":"243","text":"244"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"245","text":"246"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"247","text":"244"},{"range":"248","text":"246"},{"range":"249","text":"244"},{"range":"250","text":"246"},[2713,2714],"",[2713,2713],"\\",[3045,3046],[3045,3045],[3742,3743],[3742,3742]]